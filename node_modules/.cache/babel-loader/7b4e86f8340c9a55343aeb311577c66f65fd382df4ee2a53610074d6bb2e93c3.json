{"ast":null,"code":"import{useEffect,useState}from\"react\";import{useExerciseData}from\"../../Contexts/ExerciseContext\";import useTextToSpeech from\"../../hooks/useTextToSpeech\";import NextButtonRight from\"../NextButtonRight/NextButtonRight\";import ProgressBar from\"../ProgressBar/ProgressBar\";import QuestionMarkSVG from\"../QuestionMarkSVG/QuestionMarkSVG\";import RepeatText from\"../RepeatText/RepeatText\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function QuestionRepeatWords(_ref){let{question,onComplete}=_ref;const{speak}=useTextToSpeech();const{handleNextQuestion}=useExerciseData();const[showButton,setShowButton]=useState(true);function handleNext(){setShowButton(false);onComplete();}useEffect(function(){speak(\"Please try reading the following words\");},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"pt-4 pb-1 space-y-8 px-8 h-full\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-center text-4xl font-semibold\",children:question.prompts[0]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-4 justify-center\",children:question.data.map(el=>/*#__PURE__*/_jsx(RepeatText,{text:el},el))}),showButton&&/*#__PURE__*/_jsx(NextButtonRight,{onClick:handleNext})]});}export default QuestionRepeatWords;","map":{"version":3,"names":["useEffect","useState","useExerciseData","useTextToSpeech","NextButtonRight","ProgressBar","QuestionMarkSVG","RepeatText","jsx","_jsx","jsxs","_jsxs","QuestionRepeatWords","_ref","question","onComplete","speak","handleNextQuestion","showButton","setShowButton","handleNext","className","children","prompts","data","map","el","text","onClick"],"sources":["/home/samoore/tpd/new/src/components/QuestionRepeatWords/QuestionRepeatWords.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useExerciseData } from \"../../Contexts/ExerciseContext\";\r\nimport useTextToSpeech from \"../../hooks/useTextToSpeech\";\r\nimport NextButtonRight from \"../NextButtonRight/NextButtonRight\";\r\nimport ProgressBar from \"../ProgressBar/ProgressBar\";\r\nimport QuestionMarkSVG from \"../QuestionMarkSVG/QuestionMarkSVG\";\r\nimport RepeatText from \"../RepeatText/RepeatText\";\r\n\r\nfunction QuestionRepeatWords({ question, onComplete }) {\r\n  const { speak } = useTextToSpeech();\r\n  const { handleNextQuestion } = useExerciseData();\r\n  const [showButton, setShowButton] = useState(true);\r\n\r\n  function handleNext() {\r\n    setShowButton(false);\r\n    onComplete();\r\n  }\r\n\r\n  useEffect(function () {\r\n    speak(\"Please try reading the following words\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"pt-4 pb-1 space-y-8 px-8 h-full\">\r\n      <h2 className=\"text-center text-4xl font-semibold\">\r\n        {question.prompts[0]}\r\n      </h2>\r\n      <div className=\"flex flex-wrap gap-4 justify-center\">\r\n        {question.data.map((el) => (\r\n          <RepeatText key={el} text={el} />\r\n        ))}\r\n      </div>\r\n      {showButton && <NextButtonRight onClick={handleNext} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionRepeatWords;\r\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,eAAe,KAAQ,gCAAgC,CAChE,MAAO,CAAAC,eAAe,KAAM,6BAA6B,CACzD,MAAO,CAAAC,eAAe,KAAM,oCAAoC,CAChE,MAAO,CAAAC,WAAW,KAAM,4BAA4B,CACpD,MAAO,CAAAC,eAAe,KAAM,oCAAoC,CAChE,MAAO,CAAAC,UAAU,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElD,QAAS,CAAAC,mBAAmBA,CAAAC,IAAA,CAA2B,IAA1B,CAAEC,QAAQ,CAAEC,UAAW,CAAC,CAAAF,IAAA,CACnD,KAAM,CAAEG,KAAM,CAAC,CAAGb,eAAe,CAAC,CAAC,CACnC,KAAM,CAAEc,kBAAmB,CAAC,CAAGf,eAAe,CAAC,CAAC,CAChD,KAAM,CAACgB,UAAU,CAAEC,aAAa,CAAC,CAAGlB,QAAQ,CAAC,IAAI,CAAC,CAElD,QAAS,CAAAmB,UAAUA,CAAA,CAAG,CACpBD,aAAa,CAAC,KAAK,CAAC,CACpBJ,UAAU,CAAC,CAAC,CACd,CAEAf,SAAS,CAAC,UAAY,CACpBgB,KAAK,CAAC,wCAAwC,CAAC,CACjD,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEL,KAAA,QAAKU,SAAS,CAAC,iCAAiC,CAAAC,QAAA,eAC9Cb,IAAA,OAAIY,SAAS,CAAC,oCAAoC,CAAAC,QAAA,CAC/CR,QAAQ,CAACS,OAAO,CAAC,CAAC,CAAC,CAClB,CAAC,cACLd,IAAA,QAAKY,SAAS,CAAC,qCAAqC,CAAAC,QAAA,CACjDR,QAAQ,CAACU,IAAI,CAACC,GAAG,CAAEC,EAAE,eACpBjB,IAAA,CAACF,UAAU,EAAUoB,IAAI,CAAED,EAAG,EAAbA,EAAe,CACjC,CAAC,CACC,CAAC,CACLR,UAAU,eAAIT,IAAA,CAACL,eAAe,EAACwB,OAAO,CAAER,UAAW,CAAE,CAAC,EACpD,CAAC,CAEV,CAEA,cAAe,CAAAR,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}