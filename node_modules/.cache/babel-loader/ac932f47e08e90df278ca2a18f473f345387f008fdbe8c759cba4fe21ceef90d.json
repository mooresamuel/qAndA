{"ast":null,"code":"import{useState}from\"react\";import{textToSpeechAPI}from\"../services/text2SpeechAPI\";export default function useTextToSpeech(){const[isLoading,setIsLoading]=useState(false);const[audioCached,setAudioCached]=useState(\"\");async function speak(text){setIsLoading(true);if(!audioCached){const audioData=await textToSpeechAPI(text);setAudioCached(audioData);playAudio(audioData);}else{audioCached.play();}setIsLoading(false);}function playAudio(audioData){const audioBlob=new Blob([Uint8Array.from(atob(audioData),c=>c.charCodeAt(0))],{type:\"audio/mp3\"});const audioUrl=URL.createObjectURL(audioBlob);const audio=new Audio(audioUrl);if(!audioCached)setAudioCached(audio);audio.play();}return{isLoading,speak};}","map":{"version":3,"names":["useState","textToSpeechAPI","useTextToSpeech","isLoading","setIsLoading","audioCached","setAudioCached","speak","text","audioData","playAudio","play","audioBlob","Blob","Uint8Array","from","atob","c","charCodeAt","type","audioUrl","URL","createObjectURL","audio","Audio"],"sources":["/home/samoore/tpd/new/src/hooks/useTextToSpeech.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { textToSpeechAPI } from \"../services/text2SpeechAPI\";\r\n\r\nexport default function useTextToSpeech() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [audioCached, setAudioCached] = useState(\"\");\r\n\r\n  async function speak(text) {\r\n    setIsLoading(true);\r\n\r\n    if (!audioCached) {\r\n      const audioData = await textToSpeechAPI(text);\r\n      setAudioCached(audioData);\r\n      playAudio(audioData);\r\n    } else {\r\n      audioCached.play();\r\n    }\r\n\r\n    setIsLoading(false);\r\n  }\r\n\r\n  function playAudio(audioData) {\r\n    const audioBlob = new Blob(\r\n      [Uint8Array.from(atob(audioData), (c) => c.charCodeAt(0))],\r\n      { type: \"audio/mp3\" }\r\n    );\r\n    const audioUrl = URL.createObjectURL(audioBlob);\r\n    const audio = new Audio(audioUrl);\r\n    if (!audioCached) setAudioCached(audio);\r\n    audio.play();\r\n  }\r\n\r\n  return { isLoading, speak };\r\n}\r\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,OAASC,eAAe,KAAQ,4BAA4B,CAE5D,cAAe,SAAS,CAAAC,eAAeA,CAAA,CAAG,CACxC,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGJ,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACK,WAAW,CAAEC,cAAc,CAAC,CAAGN,QAAQ,CAAC,EAAE,CAAC,CAElD,cAAe,CAAAO,KAAKA,CAACC,IAAI,CAAE,CACzBJ,YAAY,CAAC,IAAI,CAAC,CAElB,GAAI,CAACC,WAAW,CAAE,CAChB,KAAM,CAAAI,SAAS,CAAG,KAAM,CAAAR,eAAe,CAACO,IAAI,CAAC,CAC7CF,cAAc,CAACG,SAAS,CAAC,CACzBC,SAAS,CAACD,SAAS,CAAC,CACtB,CAAC,IAAM,CACLJ,WAAW,CAACM,IAAI,CAAC,CAAC,CACpB,CAEAP,YAAY,CAAC,KAAK,CAAC,CACrB,CAEA,QAAS,CAAAM,SAASA,CAACD,SAAS,CAAE,CAC5B,KAAM,CAAAG,SAAS,CAAG,GAAI,CAAAC,IAAI,CACxB,CAACC,UAAU,CAACC,IAAI,CAACC,IAAI,CAACP,SAAS,CAAC,CAAGQ,CAAC,EAAKA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAC1D,CAAEC,IAAI,CAAE,WAAY,CACtB,CAAC,CACD,KAAM,CAAAC,QAAQ,CAAGC,GAAG,CAACC,eAAe,CAACV,SAAS,CAAC,CAC/C,KAAM,CAAAW,KAAK,CAAG,GAAI,CAAAC,KAAK,CAACJ,QAAQ,CAAC,CACjC,GAAI,CAACf,WAAW,CAAEC,cAAc,CAACiB,KAAK,CAAC,CACvCA,KAAK,CAACZ,IAAI,CAAC,CAAC,CACd,CAEA,MAAO,CAAER,SAAS,CAAEI,KAAM,CAAC,CAC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}