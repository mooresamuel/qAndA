{"ast":null,"code":"var _jsxFileName = \"/home/samoore/tpd/new/src/components/RepeatSentence/RepeatSentence.js\";\n/* eslint-disable react/prop-types */\nimport IndividualWord from \"../IndividualWord/IndividualWord\";\nimport TextToSpeech from \"../TextToSpeech/TextToSpeech\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RepeatSentence({\n  sentence,\n  spokenAnswer,\n  highlightable = true\n}) {\n  console.log(\"repeatSentence spokenAnswer\", spokenAnswer);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" flex gap-3 w-full items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"self-start\",\n      children: /*#__PURE__*/_jsxDEV(TextToSpeech, {\n        sentence: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center text-wrap cursor-pointer font-semibold text-slate-800\",\n      children: sentence.split(\" \").map((word, i) => /*#__PURE__*/_jsxDEV(IndividualWord, {\n        word: word,\n        spokenAnswer: spokenAnswer === null || spokenAnswer === void 0 ? void 0 : spokenAnswer.at(i)\n      }, `${word}${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = RepeatSentence;\nexport default RepeatSentence;\nvar _c;\n$RefreshReg$(_c, \"RepeatSentence\");","map":{"version":3,"names":["IndividualWord","TextToSpeech","jsxDEV","_jsxDEV","RepeatSentence","sentence","spokenAnswer","highlightable","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","split","map","word","i","at","_c","$RefreshReg$"],"sources":["/home/samoore/tpd/new/src/components/RepeatSentence/RepeatSentence.js"],"sourcesContent":["/* eslint-disable react/prop-types */\r\nimport IndividualWord from \"../IndividualWord/IndividualWord\";\r\nimport TextToSpeech from \"../TextToSpeech/TextToSpeech\";\r\n\r\nfunction RepeatSentence({ sentence, spokenAnswer, highlightable = true }) {\r\n  console.log(\"repeatSentence spokenAnswer\", spokenAnswer);\r\n  return (\r\n    <div className=\" flex gap-3 w-full items-center\">\r\n      <div className=\"self-start\">\r\n        <TextToSpeech sentence={sentence} />\r\n      </div>\r\n      <h3 className=\"text-center text-wrap cursor-pointer font-semibold text-slate-800\">\r\n        {sentence.split(\" \").map((word, i) => (\r\n          <IndividualWord\r\n            key={`${word}${i}`}\r\n            word={word}\r\n            spokenAnswer={spokenAnswer?.at(i)}\r\n          />\r\n        ))}\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RepeatSentence;\r\n"],"mappings":";AAAA;AACA,OAAOA,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,YAAY,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,cAAcA,CAAC;EAAEC,QAAQ;EAAEC,YAAY;EAAEC,aAAa,GAAG;AAAK,CAAC,EAAE;EACxEC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEH,YAAY,CAAC;EACxD,oBACEH,OAAA;IAAKO,SAAS,EAAC,iCAAiC;IAAAC,QAAA,gBAC9CR,OAAA;MAAKO,SAAS,EAAC,YAAY;MAAAC,QAAA,eACzBR,OAAA,CAACF,YAAY;QAACI,QAAQ,EAAEA;MAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACNZ,OAAA;MAAIO,SAAS,EAAC,mEAAmE;MAAAC,QAAA,EAC9EN,QAAQ,CAACW,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBAC/BhB,OAAA,CAACH,cAAc;QAEbkB,IAAI,EAAEA,IAAK;QACXZ,YAAY,EAAEA,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEc,EAAE,CAACD,CAAC;MAAE,GAF7B,GAAGD,IAAI,GAAGC,CAAC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGnB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACM,EAAA,GAlBQjB,cAAc;AAoBvB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}