{"ast":null,"code":"var _jsxFileName = \"/home/samoore/tpd/new/src/components/SpokenText/SpokenText.js\";\n/* eslint-disable react/prop-types */\nimport TextToSpeech from \"../TextToSpeech/TextToSpeech\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SpokenText({\n  text,\n  displayText,\n  containerClass,\n  className,\n  buttonClass = \"\",\n  extendText = null,\n  extendable = null\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex gap-3 ${containerClass}`,\n    children: [/*#__PURE__*/_jsxDEV(TextToSpeech, {\n      sentence: text,\n      buttonClass: buttonClass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `capitalize text-slate-700 font-semibold mb-0 flex ${className}`,\n      children: [extendable === null ? displayText : extendable ? displayText : displayText.slice(0, 100), \" \", extendText && /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: extendText,\n        className: \"text-blue-600 cursor-pointer inline lowercase\",\n        children: extendable ? \" [less]\" : \"...more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = SpokenText;\nexport default SpokenText;\nvar _c;\n$RefreshReg$(_c, \"SpokenText\");","map":{"version":3,"names":["TextToSpeech","jsxDEV","_jsxDEV","SpokenText","text","displayText","containerClass","className","buttonClass","extendText","extendable","children","sentence","fileName","_jsxFileName","lineNumber","columnNumber","slice","onClick","_c","$RefreshReg$"],"sources":["/home/samoore/tpd/new/src/components/SpokenText/SpokenText.js"],"sourcesContent":["/* eslint-disable react/prop-types */\r\nimport TextToSpeech from \"../TextToSpeech/TextToSpeech\";\r\n\r\nfunction SpokenText({ text, displayText, containerClass, className, buttonClass = \"\",\r\n  extendText = null, extendable = null }) {\r\n\r\n  return (\r\n    <div className={`flex gap-3 ${containerClass}`}>\r\n      <TextToSpeech sentence={text} buttonClass={buttonClass} />\r\n      <p\r\n        className={`capitalize text-slate-700 font-semibold mb-0 flex ${className}`}\r\n      >\r\n        { extendable  === null ?\r\n          displayText : extendable ? displayText : displayText.slice(0, 100) \r\n        \r\n        } {\r\n          extendText &&\r\n          <span \r\n            onClick={extendText}\r\n            className=\"text-blue-600 cursor-pointer inline lowercase\"\r\n          >\r\n            {extendable ? \" [less]\" : \"...more\"}\r\n          </span>\r\n          \r\n        }\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpokenText;\r\n"],"mappings":";AAAA;AACA,OAAOA,YAAY,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,UAAUA,CAAC;EAAEC,IAAI;EAAEC,WAAW;EAAEC,cAAc;EAAEC,SAAS;EAAEC,WAAW,GAAG,EAAE;EAClFC,UAAU,GAAG,IAAI;EAAEC,UAAU,GAAG;AAAK,CAAC,EAAE;EAExC,oBACER,OAAA;IAAKK,SAAS,EAAE,cAAcD,cAAc,EAAG;IAAAK,QAAA,gBAC7CT,OAAA,CAACF,YAAY;MAACY,QAAQ,EAAER,IAAK;MAACI,WAAW,EAAEA;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1Dd,OAAA;MACEK,SAAS,EAAE,qDAAqDA,SAAS,EAAG;MAAAI,QAAA,GAE1ED,UAAU,KAAM,IAAI,GACpBL,WAAW,GAAGK,UAAU,GAAGL,WAAW,GAAGA,WAAW,CAACY,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAEnE,GAAC,EACAR,UAAU,iBACVP,OAAA;QACEgB,OAAO,EAAET,UAAW;QACpBF,SAAS,EAAC,+CAA+C;QAAAI,QAAA,EAExDD,UAAU,GAAG,SAAS,GAAG;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAACG,EAAA,GAzBQhB,UAAU;AA2BnB,eAAeA,UAAU;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}