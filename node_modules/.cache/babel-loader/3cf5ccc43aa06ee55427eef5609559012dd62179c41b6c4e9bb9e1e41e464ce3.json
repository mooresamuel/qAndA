{"ast":null,"code":"var _jsxFileName = \"/home/samoore/tpd/new/src/Contexts/ExerciseContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useRef, useState } from \"react\";\nimport { Outlet, useNavigate, useParams } from \"react-router-dom\";\nimport { getExercise } from \"../services/getQuestionsAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExerciseContext = /*#__PURE__*/createContext();\nfunction ExerciseProvider({\n  children\n}) {\n  _s();\n  var _exercise$questions;\n  const navigate = useNavigate();\n  const {\n    exercise_id\n  } = useParams();\n  const [withCoach, setWithCoach] = useState(false);\n  const [exercise, setExercise] = useState([]);\n  const [mistakes, setMistakes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [currentLevel, setCurrentLevel] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState({});\n  const usedAiInExercise = useRef(false);\n\n  // const currentQuestion = exercise?.questions?.at(questionIndex);\n  const numQuestions = exercise === null || exercise === void 0 ? void 0 : (_exercise$questions = exercise.questions) === null || _exercise$questions === void 0 ? void 0 : _exercise$questions.length;\n  useEffect(function () {\n    async function fetch() {\n      try {\n        var _data$questions;\n        setIsLoading(true);\n        const data = await getExercise(exercise_id);\n        setExercise(data);\n        setCurrentQuestion(data === null || data === void 0 ? void 0 : (_data$questions = data.questions) === null || _data$questions === void 0 ? void 0 : _data$questions.at(0));\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetch();\n  }, [exercise_id]);\n  const handleNextQuestion = () => {\n    handleAddMistake({\n      question_id: currentQuestion.question_id\n    });\n    usedAiInExercise.current = false;\n    setCurrentLevel(level => level + 1);\n    if (questionIndex < numQuestions - 1) {\n      var _exercise$questions2, _exercise$questions3;\n      const newIndex = questionIndex + 1;\n      navigate(`/exercise/${exercise_id}/steps/${exercise === null || exercise === void 0 ? void 0 : (_exercise$questions2 = exercise.questions) === null || _exercise$questions2 === void 0 ? void 0 : _exercise$questions2.at(newIndex).question_id}`);\n      setQuestionIndex(newIndex);\n      setCurrentQuestion(exercise === null || exercise === void 0 ? void 0 : (_exercise$questions3 = exercise.questions) === null || _exercise$questions3 === void 0 ? void 0 : _exercise$questions3.at(newIndex));\n    }\n    if (questionIndex === numQuestions - 1) {\n      setTimeout(() => {\n        setCurrentLevel(0);\n        navigate(`/exercise/${exercise_id}/complete`);\n      }, 330);\n    }\n  };\n  useEffect(function () {\n    if (exercise) {\n      setMistakes(exercise);\n    }\n  }, [exercise]);\n  const handleAddMistake = ({\n    mistake\n  }) => {\n    console.log(handleAddMistake);\n    const newMistakesArray = {\n      ...mistakes,\n      questions: mistakes.questions.map(question => {\n        if (mistake && currentQuestion.question_id === question.question_id) {\n          const currentMistakes = question.mistakes ? [...question.mistakes] : [];\n          return {\n            ...question,\n            mistakes: [...currentMistakes, mistake],\n            used_Ai: usedAiInExercise.current\n          };\n        } else {\n          return {\n            ...question,\n            usedAi: usedAiInExercise.current\n          };\n        }\n      })\n    };\n    setMistakes(newMistakesArray);\n  };\n  return /*#__PURE__*/_jsxDEV(ExerciseContext.Provider, {\n    value: {\n      withCoach,\n      setWithCoach,\n      exercise,\n      isLoading,\n      questionIndex,\n      currentQuestion,\n      numQuestions,\n      handleNextQuestion,\n      currentLevel,\n      setCurrentLevel,\n      mistakes,\n      handleAddMistake,\n      usedAiInExercise\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(ExerciseProvider, \"B3kmWiT3+anGhQrdVcmeaeW2mFI=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ExerciseProvider;\nexport default ExerciseProvider;\nexport const useExerciseData = () => {\n  _s2();\n  const data = useContext(ExerciseContext);\n  if (!data) throw new Error(\"useExerciseData used outside of ExerciseContext Provider\");\n  return data;\n};\n_s2(useExerciseData, \"QDbvtl2XjZhCafbmMBOV/hNJip4=\");\nvar _c;\n$RefreshReg$(_c, \"ExerciseProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useRef","useState","Outlet","useNavigate","useParams","getExercise","jsxDEV","_jsxDEV","ExerciseContext","ExerciseProvider","children","_s","_exercise$questions","navigate","exercise_id","withCoach","setWithCoach","exercise","setExercise","mistakes","setMistakes","isLoading","setIsLoading","questionIndex","setQuestionIndex","currentLevel","setCurrentLevel","currentQuestion","setCurrentQuestion","usedAiInExercise","numQuestions","questions","length","fetch","_data$questions","data","at","err","console","log","handleNextQuestion","handleAddMistake","question_id","current","level","_exercise$questions2","_exercise$questions3","newIndex","setTimeout","mistake","newMistakesArray","map","question","currentMistakes","used_Ai","usedAi","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useExerciseData","_s2","Error","$RefreshReg$"],"sources":["/home/samoore/tpd/new/src/Contexts/ExerciseContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useRef, useState } from \"react\";\r\nimport { Outlet, useNavigate, useParams } from \"react-router-dom\";\r\nimport { getExercise } from \"../services/getQuestionsAPI\";\r\n\r\nconst ExerciseContext = createContext();\r\n\r\nfunction ExerciseProvider({ children }) {\r\n  const navigate = useNavigate();\r\n  const { exercise_id } = useParams();\r\n  const [withCoach, setWithCoach] = useState(false);\r\n  const [exercise, setExercise] = useState([]);\r\n  const [mistakes, setMistakes] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [questionIndex, setQuestionIndex] = useState(0);\r\n  const [currentLevel, setCurrentLevel] = useState(0);\r\n  const [currentQuestion, setCurrentQuestion] = useState({});\r\n\r\n  const usedAiInExercise = useRef(false);\r\n\r\n  // const currentQuestion = exercise?.questions?.at(questionIndex);\r\n  const numQuestions = exercise?.questions?.length;\r\n\r\n  useEffect(\r\n    function () {\r\n      async function fetch() {\r\n        try {\r\n          setIsLoading(true);\r\n          const data = await getExercise(exercise_id);\r\n          setExercise(data);\r\n          setCurrentQuestion(data?.questions?.at(0));\r\n        } catch (err) {\r\n          console.log(err);\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n\r\n      fetch();\r\n    },\r\n    [exercise_id]\r\n  );\r\n\r\n  const handleNextQuestion = () => {\r\n    handleAddMistake({ question_id: currentQuestion.question_id });\r\n    usedAiInExercise.current = false;\r\n    setCurrentLevel((level) => level + 1);\r\n    if (questionIndex < numQuestions - 1) {\r\n      const newIndex = questionIndex + 1;\r\n      navigate(\r\n        `/exercise/${exercise_id}/steps/${\r\n          exercise?.questions?.at(newIndex).question_id\r\n        }`\r\n      );\r\n      setQuestionIndex(newIndex);\r\n      setCurrentQuestion(exercise?.questions?.at(newIndex));\r\n    }\r\n    if (questionIndex === numQuestions - 1) {\r\n      setTimeout(() => {\r\n        setCurrentLevel(0);\r\n        navigate(`/exercise/${exercise_id}/complete`);\r\n      }, 330);\r\n    }\r\n  };\r\n\r\n  useEffect(\r\n    function () {\r\n      if (exercise) {\r\n        setMistakes(exercise);\r\n      }\r\n    },\r\n    [exercise]\r\n  );\r\n\r\n  const handleAddMistake = ({ mistake }) => {\r\n    console.log(handleAddMistake);\r\n    const newMistakesArray = {\r\n      ...mistakes,\r\n      questions: mistakes.questions.map((question) => {\r\n        if (mistake && currentQuestion.question_id === question.question_id) {\r\n          const currentMistakes = question.mistakes\r\n            ? [...question.mistakes]\r\n            : [];\r\n\r\n          return {\r\n            ...question,\r\n            mistakes: [...currentMistakes, mistake],\r\n            used_Ai: usedAiInExercise.current,\r\n          };\r\n        } else {\r\n          return { ...question, usedAi: usedAiInExercise.current };\r\n        }\r\n      }),\r\n    };\r\n    setMistakes(newMistakesArray);\r\n  };\r\n\r\n  return (\r\n    <ExerciseContext.Provider\r\n      value={{\r\n        withCoach,\r\n        setWithCoach,\r\n        exercise,\r\n        isLoading,\r\n        questionIndex,\r\n        currentQuestion,\r\n        numQuestions,\r\n        handleNextQuestion,\r\n        currentLevel,\r\n        setCurrentLevel,\r\n        mistakes,\r\n        handleAddMistake,\r\n        usedAiInExercise,\r\n      }}\r\n    >\r\n      {children}\r\n      <Outlet />\r\n    </ExerciseContext.Provider>\r\n  );\r\n}\r\n\r\nexport default ExerciseProvider;\r\n\r\nexport const useExerciseData = () => {\r\n  const data = useContext(ExerciseContext);\r\n  if (!data)\r\n    throw new Error(\"useExerciseData used outside of ExerciseContext Provider\");\r\n  return data;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}