{"ast":null,"code":"import{useState,useEffect}from\"react\";import ProgressBar from\"../ProgressBar/ProgressBar\";import QuestionMarkSVG from\"../QuestionMarkSVG/QuestionMarkSVG\";import Word from\"../Word/Word\";import NextButtonRight from\"../NextButtonRight/NextButtonRight\";import{useExerciseData}from\"../../Contexts/ExerciseContext\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function QuestionFindingMatchingWords(_ref){let{question}=_ref;const[picks,setPicks]=useState([]);const[correct,setCorrect]=useState(false);const{handleNextQuestion}=useExerciseData();const handleClick=word=>{setPicks(prevPicks=>{if(prevPicks.includes(word)){return prevPicks.filter(w=>w!==word);}else{return[...prevPicks,word];}});};useEffect(()=>{if(picks.length>0){if(question.answers.every(word=>picks.includes(word))){setCorrect(true);}else{setCorrect(false);}}},[picks]);return/*#__PURE__*/_jsxs(\"div\",{className:\"h-full p-5 flex flex-col gap-14 items-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"font-bold text-center\",children:question.prompts[0]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-3 p-4 w-full items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap items-center justify-center gap-3\",children:question.data.length>0&&question.data.map((word,i)=>/*#__PURE__*/_jsx(Word,{word:word,sound:question.prompts[0],clicked:picks.includes(word),onClick:()=>handleClick(word)},i+word))}),/*#__PURE__*/_jsx(NextButtonRight,{isEnabled:correct,className:\"mt-28\",onClick:handleNextQuestion})]})]});}export default QuestionFindingMatchingWords;","map":{"version":3,"names":["useState","useEffect","ProgressBar","QuestionMarkSVG","Word","NextButtonRight","useExerciseData","jsx","_jsx","jsxs","_jsxs","QuestionFindingMatchingWords","_ref","question","picks","setPicks","correct","setCorrect","handleNextQuestion","handleClick","word","prevPicks","includes","filter","w","length","answers","every","className","children","prompts","data","map","i","sound","clicked","onClick","isEnabled"],"sources":["/home/samoore/tpd/new/src/components/QuestionFindingMatchingWords/QuestionFindingMatchingWords.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport ProgressBar from \"../ProgressBar/ProgressBar\";\nimport QuestionMarkSVG from \"../QuestionMarkSVG/QuestionMarkSVG\";\nimport Word from \"../Word/Word\";\nimport NextButtonRight from \"../NextButtonRight/NextButtonRight\";\nimport { useExerciseData } from \"../../Contexts/ExerciseContext\";\n\nfunction QuestionFindingMatchingWords({ question }) {\n  const [picks, setPicks] = useState([]);\n  const [correct, setCorrect] = useState(false);\n  const { handleNextQuestion } = useExerciseData();\n\n  const handleClick = (word) => {\n    setPicks((prevPicks) => {\n      if (prevPicks.includes(word)) {\n        return prevPicks.filter((w) => w !== word);\n      } else {\n        return [...prevPicks, word];\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (picks.length > 0) {\n      if (question.answers.every((word) => picks.includes(word))) {\n        setCorrect(true);\n      } else {\n        setCorrect(false);\n      }\n    }\n  }, [picks]);\n\n  return (\n    <div className=\"h-full p-5 flex flex-col gap-14 items-center\">\n      {/* <div className=\"w-full grid grid-cols-[95%_5%] items-center gap-2 px-4\">\n        <ProgressBar />\n        <QuestionMarkSVG />\n      </div> */}\n\n      <h2 className=\"font-bold text-center\">{question.prompts[0]}</h2>\n\n      <div className=\"flex flex-col gap-3 p-4 w-full items-center\">\n        <div className=\"flex flex-wrap items-center justify-center gap-3\">\n          {question.data.length > 0 &&\n            question.data.map((word, i) => (\n              <Word\n                key={i + word}\n                word={word}\n                sound={question.prompts[0]}\n                clicked={picks.includes(word)}\n                onClick={() => handleClick(word)}\n              />\n            ))}\n        </div>\n        <NextButtonRight\n          isEnabled={correct}\n          className={\"mt-28\"}\n          onClick={handleNextQuestion}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default QuestionFindingMatchingWords;\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,WAAW,KAAM,4BAA4B,CACpD,MAAO,CAAAC,eAAe,KAAM,oCAAoC,CAChE,MAAO,CAAAC,IAAI,KAAM,cAAc,CAC/B,MAAO,CAAAC,eAAe,KAAM,oCAAoC,CAChE,OAASC,eAAe,KAAQ,gCAAgC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjE,QAAS,CAAAC,4BAA4BA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAChD,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACgB,OAAO,CAAEC,UAAU,CAAC,CAAGjB,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAAEkB,kBAAmB,CAAC,CAAGZ,eAAe,CAAC,CAAC,CAEhD,KAAM,CAAAa,WAAW,CAAIC,IAAI,EAAK,CAC5BL,QAAQ,CAAEM,SAAS,EAAK,CACtB,GAAIA,SAAS,CAACC,QAAQ,CAACF,IAAI,CAAC,CAAE,CAC5B,MAAO,CAAAC,SAAS,CAACE,MAAM,CAAEC,CAAC,EAAKA,CAAC,GAAKJ,IAAI,CAAC,CAC5C,CAAC,IAAM,CACL,MAAO,CAAC,GAAGC,SAAS,CAAED,IAAI,CAAC,CAC7B,CACF,CAAC,CAAC,CACJ,CAAC,CAEDnB,SAAS,CAAC,IAAM,CACd,GAAIa,KAAK,CAACW,MAAM,CAAG,CAAC,CAAE,CACpB,GAAIZ,QAAQ,CAACa,OAAO,CAACC,KAAK,CAAEP,IAAI,EAAKN,KAAK,CAACQ,QAAQ,CAACF,IAAI,CAAC,CAAC,CAAE,CAC1DH,UAAU,CAAC,IAAI,CAAC,CAClB,CAAC,IAAM,CACLA,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CACF,CAAC,CAAE,CAACH,KAAK,CAAC,CAAC,CAEX,mBACEJ,KAAA,QAAKkB,SAAS,CAAC,8CAA8C,CAAAC,QAAA,eAM3DrB,IAAA,OAAIoB,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAEhB,QAAQ,CAACiB,OAAO,CAAC,CAAC,CAAC,CAAK,CAAC,cAEhEpB,KAAA,QAAKkB,SAAS,CAAC,6CAA6C,CAAAC,QAAA,eAC1DrB,IAAA,QAAKoB,SAAS,CAAC,kDAAkD,CAAAC,QAAA,CAC9DhB,QAAQ,CAACkB,IAAI,CAACN,MAAM,CAAG,CAAC,EACvBZ,QAAQ,CAACkB,IAAI,CAACC,GAAG,CAAC,CAACZ,IAAI,CAAEa,CAAC,gBACxBzB,IAAA,CAACJ,IAAI,EAEHgB,IAAI,CAAEA,IAAK,CACXc,KAAK,CAAErB,QAAQ,CAACiB,OAAO,CAAC,CAAC,CAAE,CAC3BK,OAAO,CAAErB,KAAK,CAACQ,QAAQ,CAACF,IAAI,CAAE,CAC9BgB,OAAO,CAAEA,CAAA,GAAMjB,WAAW,CAACC,IAAI,CAAE,EAJ5Ba,CAAC,CAAGb,IAKV,CACF,CAAC,CACD,CAAC,cACNZ,IAAA,CAACH,eAAe,EACdgC,SAAS,CAAErB,OAAQ,CACnBY,SAAS,CAAE,OAAQ,CACnBQ,OAAO,CAAElB,kBAAmB,CAC7B,CAAC,EACC,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAAP,4BAA4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}