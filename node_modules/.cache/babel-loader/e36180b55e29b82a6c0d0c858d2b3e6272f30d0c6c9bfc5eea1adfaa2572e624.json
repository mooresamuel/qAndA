{"ast":null,"code":"import{useEffect,useState}from\"react\";import{useExerciseData}from\"../../Contexts/ExerciseContext\";import{X}from\"lucide-react\";import ChatQuestionRecording from\"../ChatQuestionRecording/ChatQuestionRecording\";import{fetchAIChatAnswer,createChatContext}from\"../../services/AIChatAPI\";import ChatBubble from\"../ChatBubble/ChatBubble\";import ChatWaitingIndicator from\"../ChatWaitingIndicator/ChatWaitingIndicator\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ChatWindow(_ref){let{onClose}=_ref;const[chat,setChat]=useState([]);const[isSending,setIsSending]=useState(false);const{exercise,currentQuestion}=useExerciseData();useEffect(function(){async function createChat(){const data=await createChatContext();console.log(data);}createChat();},[]);async function handleSend(user_input){setIsSending(true);setChat(chat=>[...chat,{sent:\"user\",message:user_input}]);try{const prompt={exercise_details:{prompts:currentQuestion.prompts,exercise_name:exercise.exercise_name,data:currentQuestion.data,question_type:currentQuestion.question_type,description:exercise.description},sight_words:exercise.sight_words,user_request:user_input};const data=await fetchAIChatAnswer(prompt);setChat(chat=>[...chat,{sent:\"bot\",message:data.response}]);}catch(err){console.log(err);}finally{setIsSending(false);}}return/*#__PURE__*/_jsxs(\"div\",{className:\"fixed inset-0 md: bg-slate-200 px-4 py-4 flex flex-col justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center py-4 px-2\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"m-0 text-hightlight text-lg font-semibold\",children:exercise.exercise_name}),/*#__PURE__*/_jsx(\"button\",{className:\"\",onClick:onClose,children:/*#__PURE__*/_jsx(X,{})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow bg-white flex flex-col gap-3 py-4 px-3 overflow-y-auto\",children:[chat.map((message,i)=>/*#__PURE__*/_jsx(ChatBubble,{message:message},i)),isSending&&/*#__PURE__*/_jsx(ChatWaitingIndicator,{})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(ChatQuestionRecording,{disabled:isSending,onSend:handleSend})})]});}export default ChatWindow;","map":{"version":3,"names":["useEffect","useState","useExerciseData","X","ChatQuestionRecording","fetchAIChatAnswer","createChatContext","ChatBubble","ChatWaitingIndicator","jsx","_jsx","jsxs","_jsxs","ChatWindow","_ref","onClose","chat","setChat","isSending","setIsSending","exercise","currentQuestion","createChat","data","console","log","handleSend","user_input","sent","message","prompt","exercise_details","prompts","exercise_name","question_type","description","sight_words","user_request","response","err","className","children","onClick","map","i","disabled","onSend"],"sources":["/home/samoore/tpd/new/src/components/ChatWindow/ChatWindow.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useExerciseData } from \"../../Contexts/ExerciseContext\";\r\nimport { X } from \"lucide-react\";\r\nimport ChatQuestionRecording from \"../ChatQuestionRecording/ChatQuestionRecording\";\r\nimport { fetchAIChatAnswer, createChatContext } from \"../../services/AIChatAPI\";\r\nimport ChatBubble from \"../ChatBubble/ChatBubble\";\r\nimport ChatWaitingIndicator from \"../ChatWaitingIndicator/ChatWaitingIndicator\";\r\n\r\nfunction ChatWindow({ onClose }) {\r\n  const [chat, setChat] = useState([]);\r\n  const [isSending, setIsSending] = useState(false);\r\n  const { exercise, currentQuestion } = useExerciseData();\r\n\r\n  useEffect(function () {\r\n    async function createChat() {\r\n      const data = await createChatContext();\r\n      console.log(data);\r\n    }\r\n    createChat();\r\n  }, []);\r\n\r\n  async function handleSend(user_input) {\r\n    setIsSending(true);\r\n    setChat((chat) => [...chat, { sent: \"user\", message: user_input }]);\r\n    try {\r\n      const prompt = {\r\n        exercise_details: {\r\n          prompts: currentQuestion.prompts,\r\n          exercise_name: exercise.exercise_name,\r\n          data: currentQuestion.data,\r\n          question_type: currentQuestion.question_type,\r\n          description: exercise.description,\r\n        },\r\n        sight_words: exercise.sight_words,\r\n        user_request: user_input,\r\n      };\r\n\r\n      const data = await fetchAIChatAnswer(prompt);\r\n      setChat((chat) => [...chat, { sent: \"bot\", message: data.response }]);\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setIsSending(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 md: bg-slate-200 px-4 py-4 flex flex-col justify-between\">\r\n      <div className=\"flex justify-between items-center py-4 px-2\">\r\n        <p className=\"m-0 text-hightlight text-lg font-semibold\">\r\n          {exercise.exercise_name}\r\n        </p>\r\n        <button className=\"\" onClick={onClose}>\r\n          <X />\r\n        </button>\r\n      </div>\r\n      <div className=\"flex-grow bg-white flex flex-col gap-3 py-4 px-3 overflow-y-auto\">\r\n        {chat.map((message, i) => (\r\n          <ChatBubble message={message} key={i} />\r\n        ))}\r\n        {isSending && <ChatWaitingIndicator />}\r\n      </div>\r\n      <div>\r\n        <ChatQuestionRecording disabled={isSending} onSend={handleSend} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}