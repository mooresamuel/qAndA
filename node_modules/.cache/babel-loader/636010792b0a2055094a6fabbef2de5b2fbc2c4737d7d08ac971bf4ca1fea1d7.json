{"ast":null,"code":"var _jsxFileName = \"/home/samoore/tpd/new/src/pages/EndExerciseChat.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { createChatContext, fetchAIEndExerciseAnswers } from \"../services/AIChatAPI\";\nimport FullPageSpinner from \"../components/FullPageSpinner/FullPageSpinner\";\nimport { useExerciseData } from \"../Contexts/ExerciseContext\";\nimport ChatQuestionRecording from \"../components/ChatQuestionRecording/ChatQuestionRecording\";\nimport ChatBubble from \"../components/ChatBubble/ChatBubble\";\nimport ChatWaitingIndicator from \"../components/ChatWaitingIndicator/ChatWaitingIndicator\";\nimport AcceptGeneratedExercises from \"../components/AcceptGeneratedExercises/AcceptGeneratedExercises\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EndExerciseChat() {\n  _s();\n  const {\n    mistakes\n  } = useExerciseData();\n  const [chat, setChat] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSending, setIsSending] = useState(false);\n  const [displayAcceptQuestions, setDisplayAcceptQuestions] = useState(false);\n  useEffect(function () {\n    async function fetch() {\n      //   await createChatContext();\n      //   const data = await fetchAIEndExerciseAnswers(mistakes);\n      //   setChat((current) => [\n      //     ...current,\n      //     { sent: \"bot\", message: data.response },\n      //   ]);\n      // Change to real name\n      //   if (data.has_questions) {\n      //     setDisplayAcceptQuestions(true);\n      //   } else {\n      //     setDisplayAcceptQuestions(false);\n      //   }\n      setIsLoading(false);\n    }\n    fetch();\n  }, []);\n  function handleUseNewExercises() {\n    console.log(\"handleUseNewExercises\");\n  }\n  if (isLoading) return /*#__PURE__*/_jsxDEV(FullPageSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col justify-between h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow bg-white flex flex-col gap-3 py-4 px-3 overflow-y-auto\",\n      children: [chat.map((message, i) => /*#__PURE__*/_jsxDEV(ChatBubble, {\n        message: message\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)), isSending && /*#__PURE__*/_jsxDEV(ChatWaitingIndicator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pb-4\",\n      children: displayAcceptQuestions ? /*#__PURE__*/_jsxDEV(AcceptGeneratedExercises, {\n        onAccept: handleUseNewExercises\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ChatQuestionRecording, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(EndExerciseChat, \"3HGkvEvBNVybtkCyM0QdoUNL/Uo=\", false, function () {\n  return [useExerciseData];\n});\n_c = EndExerciseChat;\nexport default EndExerciseChat;\nvar _c;\n$RefreshReg$(_c, \"EndExerciseChat\");","map":{"version":3,"names":["useEffect","useState","createChatContext","fetchAIEndExerciseAnswers","FullPageSpinner","useExerciseData","ChatQuestionRecording","ChatBubble","ChatWaitingIndicator","AcceptGeneratedExercises","jsxDEV","_jsxDEV","EndExerciseChat","_s","mistakes","chat","setChat","isLoading","setIsLoading","isSending","setIsSending","displayAcceptQuestions","setDisplayAcceptQuestions","fetch","handleUseNewExercises","console","log","fileName","_jsxFileName","lineNumber","columnNumber","className","children","map","message","i","onAccept","_c","$RefreshReg$"],"sources":["/home/samoore/tpd/new/src/pages/EndExerciseChat.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport {\r\n  createChatContext,\r\n  fetchAIEndExerciseAnswers,\r\n} from \"../services/AIChatAPI\";\r\nimport FullPageSpinner from \"../components/FullPageSpinner/FullPageSpinner\";\r\nimport { useExerciseData } from \"../Contexts/ExerciseContext\";\r\nimport ChatQuestionRecording from \"../components/ChatQuestionRecording/ChatQuestionRecording\";\r\nimport ChatBubble from \"../components/ChatBubble/ChatBubble\";\r\nimport ChatWaitingIndicator from \"../components/ChatWaitingIndicator/ChatWaitingIndicator\";\r\nimport AcceptGeneratedExercises from \"../components/AcceptGeneratedExercises/AcceptGeneratedExercises\";\r\n\r\nfunction EndExerciseChat() {\r\n  const { mistakes } = useExerciseData();\r\n  const [chat, setChat] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [displayAcceptQuestions, setDisplayAcceptQuestions] = useState(false);\r\n\r\n  useEffect(function () {\r\n    async function fetch() {\r\n      //   await createChatContext();\r\n      //   const data = await fetchAIEndExerciseAnswers(mistakes);\r\n      //   setChat((current) => [\r\n      //     ...current,\r\n      //     { sent: \"bot\", message: data.response },\r\n      //   ]);\r\n      // Change to real name\r\n      //   if (data.has_questions) {\r\n      //     setDisplayAcceptQuestions(true);\r\n      //   } else {\r\n      //     setDisplayAcceptQuestions(false);\r\n      //   }\r\n      setIsLoading(false);\r\n    }\r\n    fetch();\r\n  }, []);\r\n\r\n  function handleUseNewExercises() {\r\n    console.log(\"handleUseNewExercises\");\r\n  }\r\n\r\n  if (isLoading) return <FullPageSpinner />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col justify-between h-full\">\r\n      <div></div>\r\n      <div className=\"flex-grow bg-white flex flex-col gap-3 py-4 px-3 overflow-y-auto\">\r\n        {chat.map((message, i) => (\r\n          <ChatBubble message={message} key={i} />\r\n        ))}\r\n        {isSending && <ChatWaitingIndicator />}\r\n      </div>\r\n      <div className=\"pb-4\">\r\n        {displayAcceptQuestions ? (\r\n          <AcceptGeneratedExercises onAccept={handleUseNewExercises} />\r\n        ) : (\r\n          <ChatQuestionRecording />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EndExerciseChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}