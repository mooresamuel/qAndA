{"ast":null,"code":"var _jsxFileName = \"/home/samoore/tpd/new/src/pages/EndExerciseChat.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { createChatContext, fetchAIEndExerciseAnswers } from \"../services/AIChatAPI\";\nimport FullPageSpinner from \"../components/FullPageSpinner/FullPageSpinner\";\nimport { useExerciseData } from \"../Contexts/ExerciseContext\";\nimport ChatQuestionRecording from \"../components/ChatQuestionRecording/ChatQuestionRecording\";\nimport ChatBubble from \"../components/ChatBubble/ChatBubble\";\nimport ChatWaitingIndicator from \"../components/ChatWaitingIndicator/ChatWaitingIndicator\";\nimport AcceptGeneratedExercises from \"../components/AcceptGeneratedExercises/AcceptGeneratedExercises\";\nimport SpokenText from \"../components/SpokenText/SpokenText\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EndExerciseChat() {\n  _s();\n  const {\n    mistakes\n  } = useExerciseData();\n  const [chat, setChat] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSending, setIsSending] = useState(false);\n  const [displayAcceptQuestions, setDisplayAcceptQuestions] = useState(false);\n  console.log(mistakes);\n  useEffect(function () {\n    async function fetch() {\n      await createChatContext();\n      const data = await fetchAIEndExerciseAnswers({\n        exercise_details: mistakes,\n        message: \"Please evaluate this exercise\"\n      });\n      console.log(data);\n      setChat(current => [...current, {\n        sent: \"bot\",\n        message: data.response\n      }]);\n      if (data.includes_questions) {\n        setDisplayAcceptQuestions(true);\n      } else {\n        setDisplayAcceptQuestions(false);\n      }\n      setIsLoading(false);\n    }\n    fetch();\n  }, []);\n  function handleUseNewExercises() {\n    console.log(\"handleUseNewExercises\");\n  }\n  console.log(chat);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(FullPageSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col justify-between h-full py-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SpokenText, {\n        containerClass: \"items-center text-3xl\",\n        text: \"Review your performance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pb-4\",\n      children: displayAcceptQuestions ? /*#__PURE__*/_jsxDEV(AcceptGeneratedExercises, {\n        onAccept: handleUseNewExercises\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ChatQuestionRecording, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(EndExerciseChat, \"3HGkvEvBNVybtkCyM0QdoUNL/Uo=\", false, function () {\n  return [useExerciseData];\n});\n_c = EndExerciseChat;\nexport default EndExerciseChat;\nvar _c;\n$RefreshReg$(_c, \"EndExerciseChat\");","map":{"version":3,"names":["useEffect","useState","createChatContext","fetchAIEndExerciseAnswers","FullPageSpinner","useExerciseData","ChatQuestionRecording","ChatBubble","ChatWaitingIndicator","AcceptGeneratedExercises","SpokenText","jsxDEV","_jsxDEV","EndExerciseChat","_s","mistakes","chat","setChat","isLoading","setIsLoading","isSending","setIsSending","displayAcceptQuestions","setDisplayAcceptQuestions","console","log","fetch","data","exercise_details","message","current","sent","response","includes_questions","handleUseNewExercises","fileName","_jsxFileName","lineNumber","columnNumber","className","children","containerClass","text","onAccept","_c","$RefreshReg$"],"sources":["/home/samoore/tpd/new/src/pages/EndExerciseChat.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport {\r\n  createChatContext,\r\n  fetchAIEndExerciseAnswers,\r\n} from \"../services/AIChatAPI\";\r\nimport FullPageSpinner from \"../components/FullPageSpinner/FullPageSpinner\";\r\nimport { useExerciseData } from \"../Contexts/ExerciseContext\";\r\nimport ChatQuestionRecording from \"../components/ChatQuestionRecording/ChatQuestionRecording\";\r\nimport ChatBubble from \"../components/ChatBubble/ChatBubble\";\r\nimport ChatWaitingIndicator from \"../components/ChatWaitingIndicator/ChatWaitingIndicator\";\r\nimport AcceptGeneratedExercises from \"../components/AcceptGeneratedExercises/AcceptGeneratedExercises\";\r\nimport SpokenText from \"../components/SpokenText/SpokenText\";\r\n\r\nfunction EndExerciseChat() {\r\n  const { mistakes } = useExerciseData();\r\n  const [chat, setChat] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [displayAcceptQuestions, setDisplayAcceptQuestions] = useState(false);\r\n\r\n  console.log(mistakes);\r\n\r\n  useEffect(function () {\r\n    async function fetch() {\r\n      await createChatContext();\r\n      const data = await fetchAIEndExerciseAnswers({\r\n        exercise_details: mistakes,\r\n        message: \"Please evaluate this exercise\",\r\n      });\r\n\r\n      console.log(data);\r\n      setChat((current) => [\r\n        ...current,\r\n        { sent: \"bot\", message: data.response },\r\n      ]);\r\n      if (data.includes_questions) {\r\n        setDisplayAcceptQuestions(true);\r\n      } else {\r\n        setDisplayAcceptQuestions(false);\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n    fetch();\r\n  }, []);\r\n\r\n  function handleUseNewExercises() {\r\n    console.log(\"handleUseNewExercises\");\r\n  }\r\n\r\n  console.log(chat);\r\n\r\n  if (isLoading) return <FullPageSpinner />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col justify-between h-full py-4\">\r\n      <div>\r\n        <SpokenText\r\n          containerClass={\"items-center text-3xl\"}\r\n          text={\"Review your performance\"}\r\n        />\r\n      </div>\r\n      {/* <div className=\"flex-grow bg-white flex flex-col gap-3 py-4 px-3 overflow-y-auto\">\r\n        {chat.map((message, i) => (\r\n          <ChatBubble message={message} key={i} />\r\n        ))}\r\n        {isSending && <ChatWaitingIndicator />}\r\n      </div> */}\r\n      <div className=\"pb-4\">\r\n        {displayAcceptQuestions ? (\r\n          <AcceptGeneratedExercises onAccept={handleUseNewExercises} />\r\n        ) : (\r\n          <ChatQuestionRecording />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EndExerciseChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}