{"ast":null,"code":"var _jsxFileName = \"/home/samoore/tpd/new/src/components/ChatQuestionRecording/ChatQuestionRecording.js\",\n  _s = $RefreshSig$();\nimport { SendHorizontal, X } from \"lucide-react\";\nimport { useState } from \"react\";\nimport ChatStreamingAudioTranscription from \"../ChatStreamingAudioTranscription/ChatStreamingAudioTranscription\";\nimport ChatControlButton from \"../ChatControlButton/ChatControlButton\";\nimport { useExerciseData } from \"../../Contexts/ExerciseContext\";\nimport SpokenText from \"../SpokenText/SpokenText\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatQuestionRecording({\n  onSend,\n  disabled\n}) {\n  _s();\n  const [transcript, setTranscript] = useState(\"\");\n  const [isWaiting, setIsWaiting] = useState(false);\n  const {\n    usedAiInExercise\n  } = useExerciseData();\n  function handleSend() {\n    usedAiInExercise.current = true;\n    onSend(transcript);\n    setTranscript(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-40 py-4 flex flex-col gap-3 items-center justify-center\",\n    children: [transcript ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"indent-5 m-0 w-full text-start font-semibold px-2 bg-white py-2\",\n      children: transcript\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(SpokenText, {\n      containerClass: \"items-center text-lg\",\n      text: \"record a message for help\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-3\",\n      children: [transcript && !isWaiting && /*#__PURE__*/_jsxDEV(ChatControlButton, {\n        disabled: disabled,\n        onClick: () => setTranscript(\"\"),\n        children: /*#__PURE__*/_jsxDEV(X, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChatStreamingAudioTranscription, {\n        disabled: disabled,\n        transcript: transcript,\n        setTranscript: setTranscript,\n        isWaiting: isWaiting,\n        setIsWaiting: setIsWaiting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), transcript && !isWaiting && /*#__PURE__*/_jsxDEV(ChatControlButton, {\n        disabled: disabled,\n        onClick: handleSend,\n        children: [\" \", /*#__PURE__*/_jsxDEV(SendHorizontal, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatQuestionRecording, \"uSsKj3IVYdKEVNlwtCXbImskxsA=\", false, function () {\n  return [useExerciseData];\n});\n_c = ChatQuestionRecording;\nexport default ChatQuestionRecording;\nvar _c;\n$RefreshReg$(_c, \"ChatQuestionRecording\");","map":{"version":3,"names":["SendHorizontal","X","useState","ChatStreamingAudioTranscription","ChatControlButton","useExerciseData","SpokenText","jsxDEV","_jsxDEV","ChatQuestionRecording","onSend","disabled","_s","transcript","setTranscript","isWaiting","setIsWaiting","usedAiInExercise","handleSend","current","className","children","fileName","_jsxFileName","lineNumber","columnNumber","containerClass","text","onClick","_c","$RefreshReg$"],"sources":["/home/samoore/tpd/new/src/components/ChatQuestionRecording/ChatQuestionRecording.js"],"sourcesContent":["import { SendHorizontal, X } from \"lucide-react\";\r\nimport { useState } from \"react\";\r\nimport ChatStreamingAudioTranscription from \"../ChatStreamingAudioTranscription/ChatStreamingAudioTranscription\";\r\nimport ChatControlButton from \"../ChatControlButton/ChatControlButton\";\r\nimport { useExerciseData } from \"../../Contexts/ExerciseContext\";\r\nimport SpokenText from \"../SpokenText/SpokenText\";\r\n\r\nfunction ChatQuestionRecording({ onSend, disabled }) {\r\n  const [transcript, setTranscript] = useState(\"\");\r\n  const [isWaiting, setIsWaiting] = useState(false);\r\n  const { usedAiInExercise } = useExerciseData();\r\n\r\n  function handleSend() {\r\n    usedAiInExercise.current = true;\r\n    onSend(transcript);\r\n    setTranscript(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-40 py-4 flex flex-col gap-3 items-center justify-center\">\r\n      {transcript ? (\r\n        <p className=\"indent-5 m-0 w-full text-start font-semibold px-2 bg-white py-2\">\r\n          {transcript}\r\n        </p>\r\n      ) : (\r\n        <SpokenText\r\n          containerClass={\"items-center text-lg\"}\r\n          text={\"record a message for help\"}\r\n        />\r\n      )}\r\n      <div className=\"flex gap-3\">\r\n        {transcript && !isWaiting && (\r\n          <ChatControlButton\r\n            disabled={disabled}\r\n            onClick={() => setTranscript(\"\")}\r\n          >\r\n            <X />\r\n          </ChatControlButton>\r\n        )}\r\n        <ChatStreamingAudioTranscription\r\n          disabled={disabled}\r\n          transcript={transcript}\r\n          setTranscript={setTranscript}\r\n          isWaiting={isWaiting}\r\n          setIsWaiting={setIsWaiting}\r\n        />\r\n        {transcript && !isWaiting && (\r\n          <ChatControlButton disabled={disabled} onClick={handleSend}>\r\n            {\" \"}\r\n            <SendHorizontal />\r\n          </ChatControlButton>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatQuestionRecording;\r\n"],"mappings":";;AAAA,SAASA,cAAc,EAAEC,CAAC,QAAQ,cAAc;AAChD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,+BAA+B,MAAM,oEAAoE;AAChH,OAAOC,iBAAiB,MAAM,wCAAwC;AACtE,SAASC,eAAe,QAAQ,gCAAgC;AAChE,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,qBAAqBA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACnD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAEe;EAAiB,CAAC,GAAGZ,eAAe,CAAC,CAAC;EAE9C,SAASa,UAAUA,CAAA,EAAG;IACpBD,gBAAgB,CAACE,OAAO,GAAG,IAAI;IAC/BT,MAAM,CAACG,UAAU,CAAC;IAClBC,aAAa,CAAC,EAAE,CAAC;EACnB;EAEA,oBACEN,OAAA;IAAKY,SAAS,EAAC,+DAA+D;IAAAC,QAAA,GAC3ER,UAAU,gBACTL,OAAA;MAAGY,SAAS,EAAC,iEAAiE;MAAAC,QAAA,EAC3ER;IAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,gBAEJjB,OAAA,CAACF,UAAU;MACToB,cAAc,EAAE,sBAAuB;MACvCC,IAAI,EAAE;IAA4B;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CACF,eACDjB,OAAA;MAAKY,SAAS,EAAC,YAAY;MAAAC,QAAA,GACxBR,UAAU,IAAI,CAACE,SAAS,iBACvBP,OAAA,CAACJ,iBAAiB;QAChBO,QAAQ,EAAEA,QAAS;QACnBiB,OAAO,EAAEA,CAAA,KAAMd,aAAa,CAAC,EAAE,CAAE;QAAAO,QAAA,eAEjCb,OAAA,CAACP,CAAC;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACY,CACpB,eACDjB,OAAA,CAACL,+BAA+B;QAC9BQ,QAAQ,EAAEA,QAAS;QACnBE,UAAU,EAAEA,UAAW;QACvBC,aAAa,EAAEA,aAAc;QAC7BC,SAAS,EAAEA,SAAU;QACrBC,YAAY,EAAEA;MAAa;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,EACDZ,UAAU,IAAI,CAACE,SAAS,iBACvBP,OAAA,CAACJ,iBAAiB;QAACO,QAAQ,EAAEA,QAAS;QAACiB,OAAO,EAAEV,UAAW;QAAAG,QAAA,GACxD,GAAG,eACJb,OAAA,CAACR,cAAc;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACpB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACb,EAAA,CAhDQH,qBAAqB;EAAA,QAGCJ,eAAe;AAAA;AAAAwB,EAAA,GAHrCpB,qBAAqB;AAkD9B,eAAeA,qBAAqB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}