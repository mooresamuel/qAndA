{"ast":null,"code":"var _jsxFileName = \"/home/samoore/tpd/new/src/components/RepeatSentence/RepeatSentence.js\";\n/* eslint-disable react/prop-types */\nimport IndividualWord from \"../IndividualWord/IndividualWord\";\nimport TextToSpeech from \"../TextToSpeech/TextToSpeech\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RepeatSentence({\n  sentence,\n  spokenAnswer,\n  highlightable = true\n}) {\n  console.log(\"repeatSentence spokenAnswer\", spokenAnswer);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" flex gap-3 w-full items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"self-start\",\n      children: /*#__PURE__*/_jsxDEV(TextToSpeech, {\n        sentence: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center text-wrap cursor-pointer font-semibold text-slate-800\",\n      children: sentence.split(\" \").map((word, i) => {\n        var _spokenAnswer$i, _spokenAnswer$i$word, _spokenAnswer$i2;\n        return /*#__PURE__*/_jsxDEV(IndividualWord, {\n          word: word,\n          highlightable: highlightable,\n          className: `${!spokenAnswer ? \"\" : ((_spokenAnswer$i = spokenAnswer[i]) === null || _spokenAnswer$i === void 0 ? void 0 : (_spokenAnswer$i$word = _spokenAnswer$i.word) === null || _spokenAnswer$i$word === void 0 ? void 0 : _spokenAnswer$i$word.toLowerCase()) === word.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").toLowerCase() && ((_spokenAnswer$i2 = spokenAnswer[i]) === null || _spokenAnswer$i2 === void 0 ? void 0 : _spokenAnswer$i2.confidence) > 0.7 ? \"text-green-600\" : \"text-red-500\"}`\n        }, `${word}${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = RepeatSentence;\nexport default RepeatSentence;\nvar _c;\n$RefreshReg$(_c, \"RepeatSentence\");","map":{"version":3,"names":["IndividualWord","TextToSpeech","jsxDEV","_jsxDEV","RepeatSentence","sentence","spokenAnswer","highlightable","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","split","map","word","i","_spokenAnswer$i","_spokenAnswer$i$word","_spokenAnswer$i2","toLowerCase","replace","confidence","_c","$RefreshReg$"],"sources":["/home/samoore/tpd/new/src/components/RepeatSentence/RepeatSentence.js"],"sourcesContent":["/* eslint-disable react/prop-types */\r\nimport IndividualWord from \"../IndividualWord/IndividualWord\";\r\nimport TextToSpeech from \"../TextToSpeech/TextToSpeech\";\r\n\r\nfunction RepeatSentence({ sentence, spokenAnswer, highlightable = true }) {\r\n  console.log(\"repeatSentence spokenAnswer\", spokenAnswer);\r\n  return (\r\n    <div className=\" flex gap-3 w-full items-center\">\r\n      <div className=\"self-start\">\r\n        <TextToSpeech sentence={sentence} />\r\n      </div>\r\n      <h3 className=\"text-center text-wrap cursor-pointer font-semibold text-slate-800\">\r\n        {sentence.split(\" \").map((word, i) => (\r\n          <IndividualWord\r\n            key={`${word}${i}`}\r\n            word={word}\r\n            highlightable={highlightable}\r\n            className={`${\r\n              !spokenAnswer\r\n                ? \"\"\r\n                : spokenAnswer[i]?.word?.toLowerCase() ===\r\n                    word\r\n                      .replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\")\r\n                      .toLowerCase() && spokenAnswer[i]?.confidence > 0.7\r\n                ? \"text-green-600\"\r\n                : \"text-red-500\"\r\n            }`}\r\n          />\r\n        ))}\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RepeatSentence;\r\n"],"mappings":";AAAA;AACA,OAAOA,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,YAAY,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,cAAcA,CAAC;EAAEC,QAAQ;EAAEC,YAAY;EAAEC,aAAa,GAAG;AAAK,CAAC,EAAE;EACxEC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEH,YAAY,CAAC;EACxD,oBACEH,OAAA;IAAKO,SAAS,EAAC,iCAAiC;IAAAC,QAAA,gBAC9CR,OAAA;MAAKO,SAAS,EAAC,YAAY;MAAAC,QAAA,eACzBR,OAAA,CAACF,YAAY;QAACI,QAAQ,EAAEA;MAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACNZ,OAAA;MAAIO,SAAS,EAAC,mEAAmE;MAAAC,QAAA,EAC9EN,QAAQ,CAACW,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC;QAAA,IAAAC,eAAA,EAAAC,oBAAA,EAAAC,gBAAA;QAAA,oBAC/BnB,OAAA,CAACH,cAAc;UAEbkB,IAAI,EAAEA,IAAK;UACXX,aAAa,EAAEA,aAAc;UAC7BG,SAAS,EAAE,GACT,CAACJ,YAAY,GACT,EAAE,GACF,EAAAc,eAAA,GAAAd,YAAY,CAACa,CAAC,CAAC,cAAAC,eAAA,wBAAAC,oBAAA,GAAfD,eAAA,CAAiBF,IAAI,cAAAG,oBAAA,uBAArBA,oBAAA,CAAuBE,WAAW,CAAC,CAAC,MAClCL,IAAI,CACDM,OAAO,CAAC,8BAA8B,EAAE,EAAE,CAAC,CAC3CD,WAAW,CAAC,CAAC,IAAI,EAAAD,gBAAA,GAAAhB,YAAY,CAACa,CAAC,CAAC,cAAAG,gBAAA,uBAAfA,gBAAA,CAAiBG,UAAU,IAAG,GAAG,GACvD,gBAAgB,GAChB,cAAc;QACjB,GAZE,GAAGP,IAAI,GAAGC,CAAC,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAanB,CAAC;MAAA,CACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACW,EAAA,GA5BQtB,cAAc;AA8BvB,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}