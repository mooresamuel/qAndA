{"ast":null,"code":"var _jsxFileName = \"/home/samoore/tpd/new/src/components/QuestionCompleteWordLetters/QuestionCompleteWordLetters.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useExerciseData } from \"../../Contexts/ExerciseContext\";\nimport ProgressBar from \"../ProgressBar/ProgressBar\";\nimport QuestionMarkSVG from \"../QuestionMarkSVG/QuestionMarkSVG\";\nimport NextButtonRight from \"../NextButtonRight/NextButtonRight\";\nimport TextToSpeech from \"../TextToSpeech/TextToSpeech\";\nimport AnimatedTag from \"../AnimatedTag/AnimatedTag\";\nimport ModalElement from \"../ModalElement/ModalElement\";\n\n// const data = {\n//   description: ['Remember that vowel sounds can be long or short. The long vowel sounds are ā, ē, ō, ĩ and ũ', 'the short ones are a, e, i, o, and u. In this acti…here. Read each word as it appears on the screen.'],\n//   other_topics: ['level 8 other topics'],\n//   phonics: ['level 8 phonics'],\n//   questions: [{\n//     question_type: \"complete_spelling\",\n//     answers: [\"tube\"],\n//     data: [\"t\", \"u\", \"b\", \"e\"],\n//     prompts: [\"t\", \"b\"]\n//   }],\n//   sight_words: ['level 8 sight words']\n// }\n\n// const questions = [\n//   {\n//     answers: [\"tube\"],\n//     data: [\"t\", \"u\", \"b\", \"e\"],\n//     prompts: [\"t\", \"b\"]\n//   }\n// ];\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuestionCompleteWordLetters(questions) {\n  _s();\n  console.log(\"COMPONENT HIT!\");\n  const navigate = useNavigate();\n  const {\n    handleNextQuestion\n  } = useExerciseData();\n  const {\n    question\n  } = questions;\n  console.log(\"ALL Question\", questions);\n  const topLettersRefs = useRef([]);\n  const bottomLettersRefs = useRef([]);\n  const [activeIndex, setActiveIndex] = useState(null);\n  const [animatingLetter, setAnimatingLetter] = useState(null);\n  const [spelling, setSpelling] = useState([]);\n  const [letterSlots, setLetterSlots] = useState([]);\n  const [findEmptyIndex, setFindEmptyIndex] = useState(false);\n  const [correct, setCorrect] = useState(false);\n  const [restart, setRestart] = useState(false);\n  const [enableNextStage, setEnableNextStage] = useState(false);\n  const [tryAgain, setTryAgain] = useState(false);\n  const handleTopClick = (e, i, array) => {\n    if (correct) {\n      return;\n    }\n    const currentLetter = e.target.innerText;\n    const bottomRefIndex = question.data.indexOf(currentLetter);\n    if (array[i] === \"\") {\n      if (bottomRefIndex !== -1) {\n        var _topLettersRefs$curre, _bottomLettersRefs$cu;\n        const topRect = (_topLettersRefs$curre = topLettersRefs.current[i]) === null || _topLettersRefs$curre === void 0 ? void 0 : _topLettersRefs$curre.getBoundingClientRect();\n        const bottomRect = (_bottomLettersRefs$cu = bottomLettersRefs.current[bottomRefIndex]) === null || _bottomLettersRefs$cu === void 0 ? void 0 : _bottomLettersRefs$cu.getBoundingClientRect();\n        setAnimatingLetter({\n          letter: currentLetter,\n          start: topRect,\n          end: bottomRect\n        });\n      }\n      setActiveIndex(i);\n      setSpelling(prev => {\n        const arr = [...prev];\n        arr[i] = \"\";\n        return arr;\n      });\n      setTimeout(() => {\n        setAnimatingLetter(null);\n      }, 400);\n    } else {\n      return \"\";\n    }\n  };\n  const initalSetUp = () => {\n    if (letterSlots.length === 0) {\n      console.log(\"QUESTION DATA!\", question.data);\n      const createLetterSlots = question.data.map(char => question.prompts.includes(char) ? char : \"\");\n      console.log(\"CreateLetterSlots\", createLetterSlots);\n      setLetterSlots(createLetterSlots);\n      setSpelling(createLetterSlots);\n      setActiveIndex(createLetterSlots.findIndex(char => char === \"\"));\n    }\n  };\n  const handleLetterClick = (letter, index) => {\n    var _bottomLettersRefs$cu2, _topLettersRefs$curre2;\n    const bottomRect = (_bottomLettersRefs$cu2 = bottomLettersRefs.current[index]) === null || _bottomLettersRefs$cu2 === void 0 ? void 0 : _bottomLettersRefs$cu2.getBoundingClientRect();\n    const topRect = (_topLettersRefs$curre2 = topLettersRefs.current[activeIndex]) === null || _topLettersRefs$curre2 === void 0 ? void 0 : _topLettersRefs$curre2.getBoundingClientRect();\n    if (!bottomRect || !topRect) return;\n    setAnimatingLetter({\n      letter,\n      start: bottomRect,\n      end: topRect\n    });\n    setTimeout(() => {\n      setSpelling(prev => {\n        const arr = [...prev];\n        arr[activeIndex] = letter;\n        return arr;\n      });\n      setFindEmptyIndex(true);\n      setAnimatingLetter(null);\n    }, 400);\n  };\n\n  // TODO: Handle Next Page Click event\n  const handleNext = () => {\n    if (spelling.join(\"\") === question.answers[0]) {\n      setCorrect(true);\n      setTimeout(() => {\n        handleNextQuestion();\n      }, 10);\n      setLetterSlots([]);\n      setRestart(true);\n    } else {\n      setTryAgain(true);\n    }\n  };\n  useEffect(() => {\n    if (restart) {\n      console.log(\"Correct!!\");\n      setTimeout(() => {\n        initalSetUp();\n        setCorrect(false);\n        setRestart(false);\n      }, 300);\n    }\n  }, [restart]);\n  useEffect(() => {\n    initalSetUp();\n  }, []);\n  useEffect(() => {\n    if (findEmptyIndex) {\n      const nextEmptyIndex = topLettersRefs.current.findIndex(ref => ref.innerText === \"\");\n      if (nextEmptyIndex !== -1) {\n        setActiveIndex(nextEmptyIndex);\n      }\n      setFindEmptyIndex(false);\n    }\n  }, [findEmptyIndex]);\n  useEffect(() => {\n    if (spelling.length > 0) {\n      if (spelling.every(char => char !== \"\")) {\n        setEnableNextStage(true);\n      } else {\n        setEnableNextStage(false);\n      }\n    }\n  }, [animatingLetter]);\n  console.log(\"LEEEngth\", letterSlots.length);\n  console.log(\"INSIDEEER\", letterSlots);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#8CB036\"\n    },\n    className: \"h-full p-5 flex flex-col gap-14 items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full grid grid-cols-[95%_5%] items-center gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(ProgressBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuestionMarkSVG, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-max flex gap-4 justify-center shadow-md items-center bg-white py-2 px-5 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(TextToSpeech, {\n        buttonClass: \"shadow-none\",\n        sentence: question.answers[0],\n        label: \"Play sound\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-32\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"#F0F1F5\"\n        },\n        className: \"shadow-md w-full h-full p-1 gap-2 items-center justify-center flex\",\n        children: letterSlots.length > 0 && letterSlots.map((letter, i, array) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `rounded-lg ${letter === \"\" ? \"cursor-default\" : \"cursor-pointer\"} w-full h-3/5 \n                ${letter === \"\" && \"bg-blue-700\"} grid place-items-center`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: el => topLettersRefs.current[i] = el,\n            role: letter !== \"\" ? \"\" : correct ? \"\" : \"button\",\n            \"aria-pressed\": activeIndex === i,\n            disabled: letter !== \"\" ? true : correct ? true : false,\n            \"aria-disabled\": letter !== \"\" ? \"true\" : correct ? \"true\" : \"false\",\n            onClick: e => handleTopClick(e, i, array),\n            className: `\n                  ${activeIndex === i ? \"border-black border-2\" : \"\"} \n                  ${letter !== \"\" ? \"cursor-default\" : correct ? \"cursor-not-allowed\" : \"cursor-pointer\"} \n                  rounded-lg font-bold text-2xl w-[95%] h-[95%] \n                  flex items-center justify-center bg-white\n                `,\n            children: letter !== \"\" ? letter : spelling[i]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)\n        }, i + letter, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-24 flex justify-evenly items-start\",\n      children: correct ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mt-10 text-6xl font-bold\",\n        children: \"= \" + question.answers[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this) : letterSlots.length > 0 && question.data.map((letter, i) => letterSlots[i] === \"\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ref: el => bottomLettersRefs.current[i] = el,\n          onClick: () => handleLetterClick(letter, i),\n          className: `\n                rounded-lg font-bold text-2xl w-1/4 h-4/5 \n                flex items-center justify-center bg-white\n              `,\n          children: letter\n        }, letter + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), !correct && animatingLetter && /*#__PURE__*/_jsxDEV(AnimatedTag, {\n          letterPosition: animatingLetter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }, this), !correct && animatingLetter && /*#__PURE__*/_jsxDEV(AnimatedTag, {\n          letterPosition: animatingLetter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(NextButtonRight, {\n      isEnabled: enableNextStage,\n      className: \"shadow-md mt-20\",\n      onClick: handleNext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 5\n    }, this), tryAgain && /*#__PURE__*/_jsxDEV(ModalElement, {\n      className: \"h-[44%]\",\n      text: \"Try Again...\",\n      onClose: () => setTryAgain(false),\n      closeLabel: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionCompleteWordLetters, \"gVaJRmfk7/XLIb7f3W6U7umSCaQ=\", false, function () {\n  return [useNavigate, useExerciseData];\n});\n_c = QuestionCompleteWordLetters;\nexport default QuestionCompleteWordLetters;\nvar _c;\n$RefreshReg$(_c, \"QuestionCompleteWordLetters\");","map":{"version":3,"names":["useState","useEffect","useRef","useNavigate","useExerciseData","ProgressBar","QuestionMarkSVG","NextButtonRight","TextToSpeech","AnimatedTag","ModalElement","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionCompleteWordLetters","questions","_s","console","log","navigate","handleNextQuestion","question","topLettersRefs","bottomLettersRefs","activeIndex","setActiveIndex","animatingLetter","setAnimatingLetter","spelling","setSpelling","letterSlots","setLetterSlots","findEmptyIndex","setFindEmptyIndex","correct","setCorrect","restart","setRestart","enableNextStage","setEnableNextStage","tryAgain","setTryAgain","handleTopClick","e","i","array","currentLetter","target","innerText","bottomRefIndex","data","indexOf","_topLettersRefs$curre","_bottomLettersRefs$cu","topRect","current","getBoundingClientRect","bottomRect","letter","start","end","prev","arr","setTimeout","initalSetUp","length","createLetterSlots","map","char","prompts","includes","findIndex","handleLetterClick","index","_bottomLettersRefs$cu2","_topLettersRefs$curre2","handleNext","join","answers","nextEmptyIndex","ref","every","style","backgroundColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","buttonClass","sentence","label","el","role","disabled","onClick","letterPosition","isEnabled","text","onClose","closeLabel","_c","$RefreshReg$"],"sources":["/home/samoore/tpd/new/src/components/QuestionCompleteWordLetters/QuestionCompleteWordLetters.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useExerciseData } from \"../../Contexts/ExerciseContext\";\nimport ProgressBar from \"../ProgressBar/ProgressBar\";\nimport QuestionMarkSVG from \"../QuestionMarkSVG/QuestionMarkSVG\";\nimport NextButtonRight from \"../NextButtonRight/NextButtonRight\";\nimport TextToSpeech from \"../TextToSpeech/TextToSpeech\";\nimport AnimatedTag from \"../AnimatedTag/AnimatedTag\";\nimport ModalElement from \"../ModalElement/ModalElement\";\n\n// const data = {\n//   description: ['Remember that vowel sounds can be long or short. The long vowel sounds are ā, ē, ō, ĩ and ũ', 'the short ones are a, e, i, o, and u. In this acti…here. Read each word as it appears on the screen.'],\n//   other_topics: ['level 8 other topics'],\n//   phonics: ['level 8 phonics'],\n//   questions: [{\n//     question_type: \"complete_spelling\",\n//     answers: [\"tube\"],\n//     data: [\"t\", \"u\", \"b\", \"e\"],\n//     prompts: [\"t\", \"b\"]\n//   }],\n//   sight_words: ['level 8 sight words']\n// }\n\n// const questions = [\n//   {\n//     answers: [\"tube\"],\n//     data: [\"t\", \"u\", \"b\", \"e\"],\n//     prompts: [\"t\", \"b\"]\n//   }\n// ];\n\nfunction QuestionCompleteWordLetters(\n  questions\n) {\n  console.log(\"COMPONENT HIT!\")\n  const navigate = useNavigate();\n  const { handleNextQuestion } = useExerciseData();\n  const { question } = questions;\n  console.log(\"ALL Question\", questions);\n\n  const topLettersRefs = useRef([]);\n  const bottomLettersRefs = useRef([]);\n  const [activeIndex, setActiveIndex] = useState(null);\n  const [animatingLetter, setAnimatingLetter] = useState(null);\n  const [spelling, setSpelling] = useState([]);\n\n  const [letterSlots, setLetterSlots] = useState([]);\n\n  const [findEmptyIndex, setFindEmptyIndex] = useState(false);\n  const [correct, setCorrect] = useState(false);\n  const [restart, setRestart] = useState(false);\n  const [enableNextStage, setEnableNextStage] = useState(false);\n  const [tryAgain, setTryAgain] = useState(false);\n\n  const handleTopClick = (e, i, array) => {\n    if (correct) {\n      return;\n    }\n\n    const currentLetter = e.target.innerText;\n    const bottomRefIndex = question.data.indexOf(currentLetter);\n\n    if (array[i] === \"\") {\n      if (bottomRefIndex !== -1) {\n        const topRect = topLettersRefs.current[i]?.getBoundingClientRect();\n        const bottomRect = bottomLettersRefs.current[bottomRefIndex]?.getBoundingClientRect();\n        setAnimatingLetter({\n          letter: currentLetter,\n          start: topRect,\n          end: bottomRect,\n        });\n      }\n      setActiveIndex(i);\n\n      setSpelling((prev) => {\n        const arr = [...prev]\n        arr[i] = \"\";\n        return arr;\n      });\n      setTimeout(() => {\n        setAnimatingLetter(null);\n      }, 400);\n\n    } else {\n      return \"\";\n    }\n  }\n\n  const initalSetUp = () => {\n    if (letterSlots.length === 0) {\n      console.log(\"QUESTION DATA!\", question.data);\n      const createLetterSlots = question.data.map((char) => \n        question.prompts.includes(char) ? char : \"\");\n      console.log(\"CreateLetterSlots\", createLetterSlots);\n      setLetterSlots(createLetterSlots);\n      setSpelling(createLetterSlots);\n      setActiveIndex(createLetterSlots.findIndex(char => char === \"\"));\n    }\n  }\n\n\n  const handleLetterClick = (letter, index) => {\n\n    const bottomRect = bottomLettersRefs.current[index]?.getBoundingClientRect();\n    const topRect = topLettersRefs.current[activeIndex]?.getBoundingClientRect();\n\n    if (!bottomRect || !topRect) return;\n\n    setAnimatingLetter({\n      letter,\n      start: bottomRect,\n      end: topRect,\n    });\n\n    setTimeout(() => {\n      setSpelling((prev) => {\n        const arr = [...prev];\n        arr[activeIndex] = letter;\n        return arr;\n      });\n      setFindEmptyIndex(true);\n      setAnimatingLetter(null);\n      \n    }, 400);\n  };\n\n  // TODO: Handle Next Page Click event\n  const handleNext = () => {\n    if (spelling.join(\"\") === question.answers[0]) {\n      setCorrect(true);\n      setTimeout(() => {\n        handleNextQuestion();\n      }, 10);\n      setLetterSlots([]);\n      setRestart(true);\n    } else {\n      setTryAgain(true);\n    }\n  }\n\n  useEffect(() => {\n    if (restart) {\n      console.log(\"Correct!!\")\n      setTimeout(() => {\n        initalSetUp();\n        setCorrect(false);\n        setRestart(false);\n      }, 300);\n    }\n  }, [restart]);\n\n  useEffect(() => {\n    initalSetUp();\n  }, []);\n\n  useEffect(() => {\n    if (findEmptyIndex) {\n      const nextEmptyIndex = topLettersRefs.current.findIndex((ref) => ref.innerText === \"\");\n      if (nextEmptyIndex !== -1) {\n        setActiveIndex(nextEmptyIndex);\n      }\n      setFindEmptyIndex(false);\n    }\n  }, [findEmptyIndex]);\n\n  useEffect(() => {\n    if (spelling.length > 0) {\n      if (spelling.every((char) => char !== \"\")) {\n        setEnableNextStage(true);\n      } else {\n        setEnableNextStage(false);\n      }\n    }\n  }, [animatingLetter]);\n\n  console.log(\"LEEEngth\", letterSlots.length);\n  console.log(\"INSIDEEER\", letterSlots);\n\n\n  return (\n    <div\n      style={{ backgroundColor: \"#8CB036\" }}\n      className=\"h-full p-5 flex flex-col gap-14 items-center\"\n    >\n      <div className=\"w-full grid grid-cols-[95%_5%] items-center gap-2\">\n        <ProgressBar />\n        <QuestionMarkSVG />\n      </div>\n\n    <div className=\"w-max flex gap-4 justify-center shadow-md items-center bg-white py-2 px-5 rounded-lg\">\n      <TextToSpeech buttonClass={\"shadow-none\"} sentence={question.answers[0]} label={\"Play sound\"} />\n    </div>\n\n    <div className=\"w-full h-32\">\n      <div \n        style={{ backgroundColor: \"#F0F1F5\" }} \n        className=\"shadow-md w-full h-full p-1 gap-2 items-center justify-center flex\"\n        \n        \n      >\n        {\n          letterSlots.length > 0 &&\n          letterSlots.map((letter, i, array) => (\n            <div \n              key={i + letter}\n              className={`rounded-lg ${letter === \"\" ? \"cursor-default\" : \"cursor-pointer\"} w-full h-3/5 \n                ${letter === \"\" && \"bg-blue-700\"} grid place-items-center`} \n            >\n              <div \n                ref={(el) => topLettersRefs.current[i] = el}\n                role={letter !== \"\" ? \"\" : correct ? \"\" : \"button\"}\n                aria-pressed={activeIndex === i}\n                disabled={letter !== \"\" ? true : correct ? true : false}\n                aria-disabled={letter !== \"\" ? \"true\" : correct ? \"true\" : \"false\"}\n                onClick={(e) => handleTopClick(e, i, array)}\n                className={`\n                  ${activeIndex === i ? \"border-black border-2\" : \"\"} \n                  ${letter !== \"\" ? \"cursor-default\" : correct ? \"cursor-not-allowed\" : \"cursor-pointer\"} \n                  rounded-lg font-bold text-2xl w-[95%] h-[95%] \n                  flex items-center justify-center bg-white\n                `}\n              >\n                { letter !== \"\" ? letter : spelling[i] }\n              </div>\n            </div>\n          ))\n        }\n      </div>\n    </div>\n\n    <div className=\"w-full h-24 flex justify-evenly items-start\">\n      {\n        correct ?\n        <h1 className=\"mt-10 text-6xl font-bold\">{\"= \" + question.answers[0]}</h1>\n        :\n        letterSlots.length > 0 &&\n        question.data.map((letter, i) => (\n          letterSlots[i] === \"\" &&\n          <>\n            <div\n              ref={(el) => bottomLettersRefs.current[i] = el}\n              key={letter + i}\n              onClick={() => handleLetterClick(letter, i)}\n              className={`\n                rounded-lg font-bold text-2xl w-1/4 h-4/5 \n                flex items-center justify-center bg-white\n              `}\n              \n            >\n              {letter}\n            </div>\n\n            {\n              !correct && animatingLetter &&\n                <AnimatedTag \n                  letterPosition={animatingLetter}\n                />\n            }\n\n            { \n              !correct && animatingLetter &&\n                <AnimatedTag \n                  letterPosition={animatingLetter}\n                />\n            }\n          </>\n        ))\n        \n      }\n    </div>\n    \n    <NextButtonRight \n      isEnabled={enableNextStage}\n      className=\"shadow-md mt-20\" \n      onClick={handleNext}\n    />\n\n\n    {\n      tryAgain && \n        <ModalElement \n          className={\"h-[44%]\"}\n          text={\"Try Again...\"}\n          onClose={() => setTryAgain(false)}\n          closeLabel={\"Close\"}\n        />\n    }\n    </div>\n  )\n}\n\nexport default QuestionCompleteWordLetters;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}