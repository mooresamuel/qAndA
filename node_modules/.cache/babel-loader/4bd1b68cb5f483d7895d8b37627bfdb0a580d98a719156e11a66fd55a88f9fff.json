{"ast":null,"code":"/* eslint-disable react/prop-types */import TextToSpeech from\"../TextToSpeech/TextToSpeech\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function SpokenText(_ref){let{text,displayText,containerClass,className,buttonClass=\"\",extendText=null,extendable=null}=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:`flex gap-3 ${containerClass}`,children:[/*#__PURE__*/_jsx(TextToSpeech,{sentence:text,buttonClass:buttonClass}),/*#__PURE__*/_jsxs(\"p\",{className:`capitalize text-slate-700 font-semibold mb-0 flex ${className}`,children:[extendable===null?displayText:extendable?displayText:displayText.slice(0,100),\" \",extendText&&/*#__PURE__*/_jsx(\"span\",{onClick:extendText,className:\"text-blue-600 cursor-pointer inline lowercase\",children:extendable?\" [less]\":\"...more\"})]})]});}export default SpokenText;","map":{"version":3,"names":["TextToSpeech","jsx","_jsx","jsxs","_jsxs","SpokenText","_ref","text","displayText","containerClass","className","buttonClass","extendText","extendable","children","sentence","slice","onClick"],"sources":["/home/samoore/tpd/new/src/components/SpokenText/SpokenText.js"],"sourcesContent":["/* eslint-disable react/prop-types */\r\nimport TextToSpeech from \"../TextToSpeech/TextToSpeech\";\r\n\r\nfunction SpokenText({ text, displayText, containerClass, className, buttonClass = \"\",\r\n  extendText = null, extendable = null }) {\r\n\r\n  return (\r\n    <div className={`flex gap-3 ${containerClass}`}>\r\n      <TextToSpeech sentence={text} buttonClass={buttonClass} />\r\n      <p\r\n        className={`capitalize text-slate-700 font-semibold mb-0 flex ${className}`}\r\n      >\r\n        { extendable  === null ?\r\n          displayText : extendable ? displayText : displayText.slice(0, 100) \r\n        \r\n        } {\r\n          extendText &&\r\n          <span \r\n            onClick={extendText}\r\n            className=\"text-blue-600 cursor-pointer inline lowercase\"\r\n          >\r\n            {extendable ? \" [less]\" : \"...more\"}\r\n          </span>\r\n          \r\n        }\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpokenText;\r\n"],"mappings":"AAAA,qCACA,MAAO,CAAAA,YAAY,KAAM,8BAA8B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExD,QAAS,CAAAC,UAAUA,CAAAC,IAAA,CACuB,IADtB,CAAEC,IAAI,CAAEC,WAAW,CAAEC,cAAc,CAAEC,SAAS,CAAEC,WAAW,CAAG,EAAE,CAClFC,UAAU,CAAG,IAAI,CAAEC,UAAU,CAAG,IAAK,CAAC,CAAAP,IAAA,CAEtC,mBACEF,KAAA,QAAKM,SAAS,CAAE,cAAcD,cAAc,EAAG,CAAAK,QAAA,eAC7CZ,IAAA,CAACF,YAAY,EAACe,QAAQ,CAAER,IAAK,CAACI,WAAW,CAAEA,WAAY,CAAE,CAAC,cAC1DP,KAAA,MACEM,SAAS,CAAE,qDAAqDA,SAAS,EAAG,CAAAI,QAAA,EAE1ED,UAAU,GAAM,IAAI,CACpBL,WAAW,CAAGK,UAAU,CAAGL,WAAW,CAAGA,WAAW,CAACQ,KAAK,CAAC,CAAC,CAAE,GAAG,CAAC,CAEnE,GAAC,CACAJ,UAAU,eACVV,IAAA,SACEe,OAAO,CAAEL,UAAW,CACpBF,SAAS,CAAC,+CAA+C,CAAAI,QAAA,CAExDD,UAAU,CAAG,SAAS,CAAG,SAAS,CAC/B,CAAC,EAGR,CAAC,EACD,CAAC,CAEV,CAEA,cAAe,CAAAR,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}