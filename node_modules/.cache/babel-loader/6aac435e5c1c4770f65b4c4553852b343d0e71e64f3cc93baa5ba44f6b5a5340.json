{"ast":null,"code":"import { API_URL } from \"../utils/constants\";\nexport async function getExercise(exerciseId) {\n  try {\n    const response = await fetch(`${API_URL}/get_exercise_by_id?exercise_id=${exerciseId}`);\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport async function getQuestionsAPI(moduleId, exerciseId) {\n  try {\n    const options = {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n      // credentials: \"include\"\n    };\n    const response = await fetch(`${API_URL}/get_questions?module_id=${moduleId}&exercise_id=${exerciseId}`, options);\n    if (response.ok) {\n      const questions = await response.json();\n      return questions;\n    }\n  } catch (error) {\n    console.log(\"Fetch messed up\");\n    console.error(\"Request failed:\", error);\n  }\n}","map":{"version":3,"names":["API_URL","getExercise","exerciseId","response","fetch","data","json","err","console","log","getQuestionsAPI","moduleId","options","method","headers","Accept","ok","questions","error"],"sources":["/home/samoore/tpd/new/src/services/getQuestionsAPI.js"],"sourcesContent":["import { API_URL } from \"../utils/constants\";\n\nexport async function getExercise(exerciseId) {\n  try {\n    const response = await fetch(\n      `${API_URL}/get_exercise_by_id?exercise_id=${exerciseId}`\n    );\n\n    const data = await response.json();\n\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport async function getQuestionsAPI(moduleId, exerciseId) {\n  try {\n    const options = {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      // credentials: \"include\"\n    };\n\n    const response = await fetch(\n      `${API_URL}/get_questions?module_id=${moduleId}&exercise_id=${exerciseId}`,\n      options\n    );\n\n    if (response.ok) {\n      const questions = await response.json();\n      return questions;\n    }\n  } catch (error) {\n    console.log(\"Fetch messed up\");\n    console.error(\"Request failed:\", error);\n  }\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAE5C,OAAO,eAAeC,WAAWA,CAACC,UAAU,EAAE;EAC5C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGJ,OAAO,mCAAmCE,UAAU,EACzD,CAAC;IAED,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAElC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAClB;AACF;AAEA,OAAO,eAAeG,eAAeA,CAACC,QAAQ,EAAET,UAAU,EAAE;EAC1D,IAAI;IACF,MAAMU,OAAO,GAAG;MACdC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MAClB;MACA;IACF,CAAC;IAED,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGJ,OAAO,4BAA4BW,QAAQ,gBAAgBT,UAAU,EAAE,EAC1EU,OACF,CAAC;IAED,IAAIT,QAAQ,CAACa,EAAE,EAAE;MACf,MAAMC,SAAS,GAAG,MAAMd,QAAQ,CAACG,IAAI,CAAC,CAAC;MACvC,OAAOW,SAAS;IAClB;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdV,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9BD,OAAO,CAACU,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;EACzC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}