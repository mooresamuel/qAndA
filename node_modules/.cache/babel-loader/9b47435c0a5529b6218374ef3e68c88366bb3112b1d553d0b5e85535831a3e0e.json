{"ast":null,"code":"import{createContext,useContext,useEffect,useRef,useState}from\"react\";import{Outlet,useNavigate,useParams}from\"react-router-dom\";import{getExercise}from\"../services/getQuestionsAPI\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ExerciseContext=/*#__PURE__*/createContext();function ExerciseProvider(_ref){var _exercise$questions;let{children}=_ref;const navigate=useNavigate();const{exercise_id}=useParams();const[withCoach,setWithCoach]=useState(false);const[exercise,setExercise]=useState([]);const[mistakes,setMistakes]=useState([]);const[isLoading,setIsLoading]=useState(true);const[questionIndex,setQuestionIndex]=useState(0);const[currentLevel,setCurrentLevel]=useState(0);const[currentQuestion,setCurrentQuestion]=useState({});const usedAiInExercise=useRef(false);// const currentQuestion = exercise?.questions?.at(questionIndex);\nconst numQuestions=exercise===null||exercise===void 0?void 0:(_exercise$questions=exercise.questions)===null||_exercise$questions===void 0?void 0:_exercise$questions.length;useEffect(function(){if(exercise){setMistakes(exercise);}},[exercise]);useEffect(function(){async function fetch(){try{var _data$questions;setIsLoading(true);const data=await getExercise(exercise_id);setExercise(data);setCurrentQuestion(data===null||data===void 0?void 0:(_data$questions=data.questions)===null||_data$questions===void 0?void 0:_data$questions.at(0));}catch(err){console.log(err);}finally{setIsLoading(false);}}fetch();},[exercise_id]);const handleNextQuestion=()=>{// handleAddMistake({ question_id: currentQuestion.question_id });\nusedAiInExercise.current=false;setCurrentLevel(level=>level+1);if(questionIndex<numQuestions-1){var _exercise$questions2,_exercise$questions3;const newIndex=questionIndex+1;navigate(`/exercise/${exercise_id}/steps/${exercise===null||exercise===void 0?void 0:(_exercise$questions2=exercise.questions)===null||_exercise$questions2===void 0?void 0:_exercise$questions2.at(newIndex).question_id}`);setQuestionIndex(newIndex);setCurrentQuestion(exercise===null||exercise===void 0?void 0:(_exercise$questions3=exercise.questions)===null||_exercise$questions3===void 0?void 0:_exercise$questions3.at(newIndex));}if(questionIndex===numQuestions-1){setTimeout(()=>{setCurrentLevel(0);navigate(`/exercise/${exercise_id}/complete`);},330);}};const handleUseGeneratedQuestions=generatedQuestions=>{setMistakes([]);setExercise(exercise=>{return{...exercise,questions:[generatedQuestions]};});setQuestionIndex(0);setCurrentQuestion(generatedQuestions);navigate(`/exercise/${exercise_id}/steps/ai_generated`);};const handleAddMistake=_ref2=>{let{mistake}=_ref2;const newMistakesArray={...mistakes,questions:mistakes.questions.map(question=>{if(mistake&&currentQuestion.question_id===question.question_id){const currentMistakes=question.mistakes?[...question.mistakes]:[];return{...question,mistakes:[...currentMistakes,mistake],used_Ai:usedAiInExercise.current};}else{return{...question,usedAi:usedAiInExercise.current};}})};setMistakes(newMistakesArray);};return/*#__PURE__*/_jsxs(ExerciseContext.Provider,{value:{withCoach,setWithCoach,exercise,isLoading,questionIndex,currentQuestion,numQuestions,handleNextQuestion,currentLevel,setCurrentLevel,mistakes,handleAddMistake,usedAiInExercise,handleUseGeneratedQuestions},children:[children,/*#__PURE__*/_jsx(Outlet,{})]});}export default ExerciseProvider;export const useExerciseData=()=>{const data=useContext(ExerciseContext);if(!data)throw new Error(\"useExerciseData used outside of ExerciseContext Provider\");return data;};","map":{"version":3,"names":["createContext","useContext","useEffect","useRef","useState","Outlet","useNavigate","useParams","getExercise","jsx","_jsx","jsxs","_jsxs","ExerciseContext","ExerciseProvider","_ref","_exercise$questions","children","navigate","exercise_id","withCoach","setWithCoach","exercise","setExercise","mistakes","setMistakes","isLoading","setIsLoading","questionIndex","setQuestionIndex","currentLevel","setCurrentLevel","currentQuestion","setCurrentQuestion","usedAiInExercise","numQuestions","questions","length","fetch","_data$questions","data","at","err","console","log","handleNextQuestion","current","level","_exercise$questions2","_exercise$questions3","newIndex","question_id","setTimeout","handleUseGeneratedQuestions","generatedQuestions","handleAddMistake","_ref2","mistake","newMistakesArray","map","question","currentMistakes","used_Ai","usedAi","Provider","value","useExerciseData","Error"],"sources":["/home/samoore/tpd/new/src/Contexts/ExerciseContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useRef, useState } from \"react\";\r\nimport { Outlet, useNavigate, useParams } from \"react-router-dom\";\r\nimport { getExercise } from \"../services/getQuestionsAPI\";\r\n\r\nconst ExerciseContext = createContext();\r\n\r\nfunction ExerciseProvider({ children }) {\r\n  const navigate = useNavigate();\r\n  const { exercise_id } = useParams();\r\n  const [withCoach, setWithCoach] = useState(false);\r\n  const [exercise, setExercise] = useState([]);\r\n  const [mistakes, setMistakes] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [questionIndex, setQuestionIndex] = useState(0);\r\n  const [currentLevel, setCurrentLevel] = useState(0);\r\n  const [currentQuestion, setCurrentQuestion] = useState({});\r\n\r\n  const usedAiInExercise = useRef(false);\r\n\r\n  // const currentQuestion = exercise?.questions?.at(questionIndex);\r\n  const numQuestions = exercise?.questions?.length;\r\n\r\n  useEffect(\r\n    function () {\r\n      if (exercise) {\r\n        setMistakes(exercise);\r\n      }\r\n    },\r\n    [exercise]\r\n  );\r\n\r\n  useEffect(\r\n    function () {\r\n      async function fetch() {\r\n        try {\r\n          setIsLoading(true);\r\n          const data = await getExercise(exercise_id);\r\n          setExercise(data);\r\n          setCurrentQuestion(data?.questions?.at(0));\r\n        } catch (err) {\r\n          console.log(err);\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n\r\n      fetch();\r\n    },\r\n    [exercise_id]\r\n  );\r\n\r\n  const handleNextQuestion = () => {\r\n    // handleAddMistake({ question_id: currentQuestion.question_id });\r\n    usedAiInExercise.current = false;\r\n    setCurrentLevel((level) => level + 1);\r\n    if (questionIndex < numQuestions - 1) {\r\n      const newIndex = questionIndex + 1;\r\n      navigate(\r\n        `/exercise/${exercise_id}/steps/${\r\n          exercise?.questions?.at(newIndex).question_id\r\n        }`\r\n      );\r\n      setQuestionIndex(newIndex);\r\n      setCurrentQuestion(exercise?.questions?.at(newIndex));\r\n    }\r\n    if (questionIndex === numQuestions - 1) {\r\n      setTimeout(() => {\r\n        setCurrentLevel(0);\r\n        navigate(`/exercise/${exercise_id}/complete`);\r\n      }, 330);\r\n    }\r\n  };\r\n\r\n  const handleUseGeneratedQuestions = (generatedQuestions) => {\r\n    setMistakes([]);\r\n    setExercise((exercise) => {\r\n      return { ...exercise, questions: [generatedQuestions] };\r\n    });\r\n    setQuestionIndex(0);\r\n    setCurrentQuestion(generatedQuestions);\r\n    navigate(`/exercise/${exercise_id}/steps/ai_generated`);\r\n  };\r\n\r\n  const handleAddMistake = ({ mistake }) => {\r\n    const newMistakesArray = {\r\n      ...mistakes,\r\n      questions: mistakes.questions.map((question) => {\r\n        if (mistake && currentQuestion.question_id === question.question_id) {\r\n          const currentMistakes = question.mistakes\r\n            ? [...question.mistakes]\r\n            : [];\r\n\r\n          return {\r\n            ...question,\r\n            mistakes: [...currentMistakes, mistake],\r\n            used_Ai: usedAiInExercise.current,\r\n          };\r\n        } else {\r\n          return { ...question, usedAi: usedAiInExercise.current };\r\n        }\r\n      }),\r\n    };\r\n    setMistakes(newMistakesArray);\r\n  };\r\n\r\n  return (\r\n    <ExerciseContext.Provider\r\n      value={{\r\n        withCoach,\r\n        setWithCoach,\r\n        exercise,\r\n        isLoading,\r\n        questionIndex,\r\n        currentQuestion,\r\n        numQuestions,\r\n        handleNextQuestion,\r\n        currentLevel,\r\n        setCurrentLevel,\r\n        mistakes,\r\n        handleAddMistake,\r\n        usedAiInExercise,\r\n        handleUseGeneratedQuestions,\r\n      }}\r\n    >\r\n      {children}\r\n      <Outlet />\r\n    </ExerciseContext.Provider>\r\n  );\r\n}\r\n\r\nexport default ExerciseProvider;\r\n\r\nexport const useExerciseData = () => {\r\n  const data = useContext(ExerciseContext);\r\n  if (!data)\r\n    throw new Error(\"useExerciseData used outside of ExerciseContext Provider\");\r\n  return data;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}