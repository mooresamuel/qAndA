{"ast":null,"code":"var _jsxFileName = \"/home/samoore/tpd/new/src/components/ChatWindow/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useExerciseData } from \"../../Contexts/ExerciseContext\";\nimport { X } from \"lucide-react\";\nimport ChatQuestionRecording from \"../ChatQuestionRecording/ChatQuestionRecording\";\nimport { fetchAIChatAnswer, createChatContext } from \"../../services/AIChatAPI\";\nimport ChatBubble from \"../ChatBubble/ChatBubble\";\nimport ChatWaitingIndicator from \"../ChatWaitingIndicator/ChatWaitingIndicator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatWindow({\n  onClose\n}) {\n  _s();\n  const [chat, setChat] = useState([]);\n  const [isSending, setIsSending] = useState(false);\n  const {\n    exercise,\n    currentQuestion\n  } = useExerciseData();\n  useEffect(function () {\n    async function createChat() {\n      const data = await createChatContext();\n      console.log(data);\n    }\n    createChat();\n  }, []);\n  async function handleSend(user_input) {\n    setIsSending(true);\n    setChat(chat => [...chat, {\n      sent: \"user\",\n      message: user_input\n    }]);\n    try {\n      const prompt = {\n        exercise_details: {\n          prompts: currentQuestion.prompts,\n          exercise_name: exercise.exercise_name,\n          data: currentQuestion.data,\n          question_type: currentQuestion.question_type,\n          description: exercise.description\n        },\n        sight_words: exercise.sight_words,\n        user_request: user_input\n      };\n      const data = await fetchAIChatAnswer(prompt);\n      setChat(chat => [...chat, {\n        sent: \"bot\",\n        message: data.response\n      }]);\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setIsSending(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 md: bg-slate-200 px-4 py-4 flex flex-col justify-between\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center py-4 px-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"m-0 text-hightlight text-lg font-semibold\",\n        children: exercise.exercise_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(X, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow bg-white flex flex-col gap-3 py-4 px-3 overflow-y-auto\",\n      children: [chat.map((message, i) => /*#__PURE__*/_jsxDEV(ChatBubble, {\n        message: message\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)), isSending && /*#__PURE__*/_jsxDEV(ChatWaitingIndicator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ChatQuestionRecording, {\n        disabled: isSending,\n        onSend: handleSend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"gKIhcLBO/BlGriG1WxOuowJpCXs=\", false, function () {\n  return [useExerciseData];\n});\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["useEffect","useState","useExerciseData","X","ChatQuestionRecording","fetchAIChatAnswer","createChatContext","ChatBubble","ChatWaitingIndicator","jsxDEV","_jsxDEV","ChatWindow","onClose","_s","chat","setChat","isSending","setIsSending","exercise","currentQuestion","createChat","data","console","log","handleSend","user_input","sent","message","prompt","exercise_details","prompts","exercise_name","question_type","description","sight_words","user_request","response","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","i","disabled","onSend","_c","$RefreshReg$"],"sources":["/home/samoore/tpd/new/src/components/ChatWindow/ChatWindow.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useExerciseData } from \"../../Contexts/ExerciseContext\";\r\nimport { X } from \"lucide-react\";\r\nimport ChatQuestionRecording from \"../ChatQuestionRecording/ChatQuestionRecording\";\r\nimport { fetchAIChatAnswer, createChatContext } from \"../../services/AIChatAPI\";\r\nimport ChatBubble from \"../ChatBubble/ChatBubble\";\r\nimport ChatWaitingIndicator from \"../ChatWaitingIndicator/ChatWaitingIndicator\";\r\n\r\nfunction ChatWindow({ onClose }) {\r\n  const [chat, setChat] = useState([]);\r\n  const [isSending, setIsSending] = useState(false);\r\n  const { exercise, currentQuestion } = useExerciseData();\r\n\r\n  useEffect(function () {\r\n    async function createChat() {\r\n      const data = await createChatContext();\r\n      console.log(data);\r\n    }\r\n    createChat();\r\n  }, []);\r\n\r\n  async function handleSend(user_input) {\r\n    setIsSending(true);\r\n    setChat((chat) => [...chat, { sent: \"user\", message: user_input }]);\r\n    try {\r\n      const prompt = {\r\n        exercise_details: {\r\n          prompts: currentQuestion.prompts,\r\n          exercise_name: exercise.exercise_name,\r\n          data: currentQuestion.data,\r\n          question_type: currentQuestion.question_type,\r\n          description: exercise.description,\r\n        },\r\n        sight_words: exercise.sight_words,\r\n        user_request: user_input,\r\n      };\r\n\r\n      const data = await fetchAIChatAnswer(prompt);\r\n      setChat((chat) => [...chat, { sent: \"bot\", message: data.response }]);\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setIsSending(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 md: bg-slate-200 px-4 py-4 flex flex-col justify-between\">\r\n      <div className=\"flex justify-between items-center py-4 px-2\">\r\n        <p className=\"m-0 text-hightlight text-lg font-semibold\">\r\n          {exercise.exercise_name}\r\n        </p>\r\n        <button className=\"\" onClick={onClose}>\r\n          <X />\r\n        </button>\r\n      </div>\r\n      <div className=\"flex-grow bg-white flex flex-col gap-3 py-4 px-3 overflow-y-auto\">\r\n        {chat.map((message, i) => (\r\n          <ChatBubble message={message} key={i} />\r\n        ))}\r\n        {isSending && <ChatWaitingIndicator />}\r\n      </div>\r\n      <div>\r\n        <ChatQuestionRecording disabled={isSending} onSend={handleSend} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatWindow;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,CAAC,QAAQ,cAAc;AAChC,OAAOC,qBAAqB,MAAM,gDAAgD;AAClF,SAASC,iBAAiB,EAAEC,iBAAiB,QAAQ,0BAA0B;AAC/E,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,oBAAoB,MAAM,8CAA8C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhF,SAASC,UAAUA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAEiB,QAAQ;IAAEC;EAAgB,CAAC,GAAGjB,eAAe,CAAC,CAAC;EAEvDF,SAAS,CAAC,YAAY;IACpB,eAAeoB,UAAUA,CAAA,EAAG;MAC1B,MAAMC,IAAI,GAAG,MAAMf,iBAAiB,CAAC,CAAC;MACtCgB,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB;IACAD,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeI,UAAUA,CAACC,UAAU,EAAE;IACpCR,YAAY,CAAC,IAAI,CAAC;IAClBF,OAAO,CAAED,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAEY,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAEF;IAAW,CAAC,CAAC,CAAC;IACnE,IAAI;MACF,MAAMG,MAAM,GAAG;QACbC,gBAAgB,EAAE;UAChBC,OAAO,EAAEX,eAAe,CAACW,OAAO;UAChCC,aAAa,EAAEb,QAAQ,CAACa,aAAa;UACrCV,IAAI,EAAEF,eAAe,CAACE,IAAI;UAC1BW,aAAa,EAAEb,eAAe,CAACa,aAAa;UAC5CC,WAAW,EAAEf,QAAQ,CAACe;QACxB,CAAC;QACDC,WAAW,EAAEhB,QAAQ,CAACgB,WAAW;QACjCC,YAAY,EAAEV;MAChB,CAAC;MAED,MAAMJ,IAAI,GAAG,MAAMhB,iBAAiB,CAACuB,MAAM,CAAC;MAC5Cb,OAAO,CAAED,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEY,IAAI,EAAE,KAAK;QAAEC,OAAO,EAAEN,IAAI,CAACe;MAAS,CAAC,CAAC,CAAC;IACvE,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZf,OAAO,CAACC,GAAG,CAACc,GAAG,CAAC;IAClB,CAAC,SAAS;MACRpB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF;EAEA,oBACEP,OAAA;IAAK4B,SAAS,EAAC,wEAAwE;IAAAC,QAAA,gBACrF7B,OAAA;MAAK4B,SAAS,EAAC,6CAA6C;MAAAC,QAAA,gBAC1D7B,OAAA;QAAG4B,SAAS,EAAC,2CAA2C;QAAAC,QAAA,EACrDrB,QAAQ,CAACa;MAAa;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACJjC,OAAA;QAAQ4B,SAAS,EAAC,EAAE;QAACM,OAAO,EAAEhC,OAAQ;QAAA2B,QAAA,eACpC7B,OAAA,CAACP,CAAC;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNjC,OAAA;MAAK4B,SAAS,EAAC,kEAAkE;MAAAC,QAAA,GAC9EzB,IAAI,CAAC+B,GAAG,CAAC,CAAClB,OAAO,EAAEmB,CAAC,kBACnBpC,OAAA,CAACH,UAAU;QAACoB,OAAO,EAAEA;MAAQ,GAAMmB,CAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACxC,CAAC,EACD3B,SAAS,iBAAIN,OAAA,CAACF,oBAAoB;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACNjC,OAAA;MAAA6B,QAAA,eACE7B,OAAA,CAACN,qBAAqB;QAAC2C,QAAQ,EAAE/B,SAAU;QAACgC,MAAM,EAAExB;MAAW;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC9B,EAAA,CA3DQF,UAAU;EAAA,QAGqBT,eAAe;AAAA;AAAA+C,EAAA,GAH9CtC,UAAU;AA6DnB,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}