{"ast":null,"code":"import'./App.css';import Container from'react-bootstrap/Container';import Row from'react-bootstrap/Row';import Col from'react-bootstrap/Col';import Nav from'react-bootstrap/Nav';import Navbar from'react-bootstrap/Navbar';// import TextReader from './components/TextReader';\n// import NewVoiceRecorder from './components/NewVoiceRecorder';\nimport WordHelper from'./components/WordHelper';// import WordHint from './components/WordHint';\nimport WordScores from'./components/WordScores';import SentenceHint from'./test/SentenceHint';import{useCallback,useState}from'react';import{HashRouter as Router}from'react-router-dom';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faBookOpen}from'@fortawesome/free-solid-svg-icons/faBookOpen';import{faBars}from'@fortawesome/free-solid-svg-icons/faBars';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function MainScreen(){//   const [question, setQuestion] = useState('');\nconst[isWaiting,setIsWaiting]=useState(false);//   const [chat, setChat] = useState([]);\n// const source = 'https://samuelmoore.cc/'\nconst source='http://127.0.0.1:5000/';// const speakText = useCallback((message) => {\n//   console.log('Speaking text:', message);\n//   fetch(`${source}speak_text`, {\n//     method: 'POST',\n//     headers: {\n//       'Accept': 'application/json',\n//       'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify({\n//       'message': message\n//     })\n//   })\n//   .then(response => response.json())\n//   .then(data => {\n//     console.log('Response data:', data);\n//         const audioData = data.audio;\n//         const audioBlob = new Blob([Uint8Array.from(atob(audioData), c => c.charCodeAt(0))], { type: 'audio/mp3' });\n//         const audioUrl = URL.createObjectURL(audioBlob);\n//         const audio = new Audio(audioUrl);\n//         audio.onended = () => {\n//           setIsWaiting(false);\n//           }\n//         audio.play();\n//     })\n//     .catch(error => {\n//       console.error('Error:', error);\n//     }\n//     );\n//   }, [setIsWaiting]);\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"main-screen\",children:/*#__PURE__*/_jsx(SentenceHint,{source:source})});}function App(){return/*#__PURE__*/_jsx(\"div\",{className:\"bground\",children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:3}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Navbar,{bg:\"light-bg-subtle\",variant:\"dark\",className:\"navbar-top\",children:[/*#__PURE__*/_jsxs(Navbar.Brand,{href:\"#home\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faBookOpen}),\" Turning Pages \"]}),/*#__PURE__*/_jsx(Nav,{className:\"ms-auto\",children:/*#__PURE__*/_jsx(Nav.Link,{href:\"#pricing\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faBars})})})]})}),/*#__PURE__*/_jsx(Col,{md:2})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{sam:1,md:3}),/*#__PURE__*/_jsx(Col,{sam:10,md:6,children:/*#__PURE__*/_jsx(MainScreen,{})}),/*#__PURE__*/_jsx(Col,{sm:1,md:3})]})]})})});}export default App;","map":{"version":3,"names":["Container","Row","Col","Nav","Navbar","WordHelper","WordScores","SentenceHint","useCallback","useState","HashRouter","Router","FontAwesomeIcon","faBookOpen","faBars","jsx","_jsx","jsxs","_jsxs","MainScreen","isWaiting","setIsWaiting","source","className","children","App","md","bg","variant","Brand","href","icon","Link","sam","sm"],"sources":["/home/samoore/tpd/new/src/App.js"],"sourcesContent":["import './App.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n// import TextReader from './components/TextReader';\n// import NewVoiceRecorder from './components/NewVoiceRecorder';\nimport WordHelper from './components/WordHelper';\n// import WordHint from './components/WordHint';\nimport WordScores from './components/WordScores';\nimport SentenceHint from './test/SentenceHint';\nimport { useCallback, useState } from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBookOpen } from '@fortawesome/free-solid-svg-icons/faBookOpen'\nimport { faBars } from '@fortawesome/free-solid-svg-icons/faBars'\n\nfunction MainScreen() {\n//   const [question, setQuestion] = useState('');\n  const [isWaiting, setIsWaiting] = useState(false);\n//   const [chat, setChat] = useState([]);\n  \n  // const source = 'https://samuelmoore.cc/'\n    const source = 'http://127.0.0.1:5000/'\n\n\n  // const speakText = useCallback((message) => {\n  //   console.log('Speaking text:', message);\n  //   fetch(`${source}speak_text`, {\n  //     method: 'POST',\n  //     headers: {\n  //       'Accept': 'application/json',\n  //       'Content-Type': 'application/json'\n  //     },\n  //     body: JSON.stringify({\n  //       'message': message\n  //     })\n  //   })\n  //   .then(response => response.json())\n  //   .then(data => {\n  //     console.log('Response data:', data);\n  //         const audioData = data.audio;\n  //         const audioBlob = new Blob([Uint8Array.from(atob(audioData), c => c.charCodeAt(0))], { type: 'audio/mp3' });\n  //         const audioUrl = URL.createObjectURL(audioBlob);\n  //         const audio = new Audio(audioUrl);\n  //         audio.onended = () => {\n  //           setIsWaiting(false);\n  //           }\n  //         audio.play();\n\n//     })\n//     .catch(error => {\n//       console.error('Error:', error);\n//     }\n//     );\n//   }, [setIsWaiting]);\n\n  return (\n    <div className=\"main-screen\">\n\n       {/* <WordHelper source={source}/>  */}\n       {/* <TextReader               setIsWaiting={setIsWaiting}\n                                chat={chat}\n                                setChat={setChat}\n                                question={question}\n                                setQuestion={setQuestion}\n                                speakText={speakText}\n                                /> */}\n       {/* <AudioTranscription setQuestion={setQuestion} \n                                isWaiting={isWaiting}\n                                setIsWaiting={setIsWaiting}\n                                chat={chat}\n                                setChat={setChat}\n                                setUserQuestion={setUserQuestion}\n                                synth={synth}/>  */}\n      {/* <SpeechToText setQuestion={setQuestion}/> */}\n      <SentenceHint source={source}/>\n      {/* <WordScores source={source}/> */}\n      {/* <NewVoiceRecorder isWaiting={isWaiting} setIsWaiting={setIsWaiting}\n                      source={source}\n                      question={question}\n                      setQuestion={setQuestion}/>  */}\n       \n       {/* <button onClick={closeEverything}>Close Everything</button> */}\n    </div>\n  );\n}\n\n\nfunction App() {\n  return (\n    <div className=\"bground\">\n      <Router>\n        <Container>\n        <Row>\n          <Col md={3}></Col>\n          <Col md={6}>\n            <Navbar bg=\"light-bg-subtle\" variant=\"dark\" className=\"navbar-top\">\n                <Navbar.Brand href=\"#home\"><FontAwesomeIcon icon={faBookOpen} /> Turning Pages </Navbar.Brand>\n                <Nav className=\"ms-auto\">\n                  <Nav.Link href=\"#pricing\"><FontAwesomeIcon icon={faBars} /></Nav.Link>\n                </Nav>\n            </Navbar>\n          </Col>  \n          <Col  md={2}></Col>\n        </Row>  \n          <Row>\n          <Col sam={1} md={3}></Col>\n          <Col sam={10} md={6}>\n            <MainScreen />\n\n            </Col>\n          <Col sm={1} md={3}></Col>\n          </Row>\n        </Container>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}