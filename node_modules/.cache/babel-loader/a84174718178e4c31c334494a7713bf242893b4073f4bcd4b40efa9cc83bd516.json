{"ast":null,"code":"import { API_URL } from \"../utils/constants\";\nexport async function textToSpeechAPI(message) {\n  const options = {\n    method: \"POST\",\n    headers: {\n      Accept: \"audio/mp3\",\n      // Expect audio in MP3 format\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      message: message\n    })\n  };\n  const response = await fetch(`${API_URL}/speak_text`, options);\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch audio stream.\");\n  }\n\n  // Create a blob from the response stream and play it\n  const audioBlob = await response.blob();\n  const audioUrl = URL.createObjectURL(audioBlob);\n\n  // Create an Audio element to play the sound\n  const audio = new Audio(audioUrl);\n  audio.play();\n  return audioUrl; // Optionally return the URL for further use\n}","map":{"version":3,"names":["API_URL","textToSpeechAPI","message","options","method","headers","Accept","body","JSON","stringify","response","fetch","ok","Error","audioBlob","blob","audioUrl","URL","createObjectURL","audio","Audio","play"],"sources":["/home/samoore/tpd/new/src/services/text2SpeechAPI.js"],"sourcesContent":["import { API_URL } from \"../utils/constants\";\r\n\r\nexport async function textToSpeechAPI(message) {\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"audio/mp3\", // Expect audio in MP3 format\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      message: message,\r\n    }),\r\n  };\r\n\r\n  const response = await fetch(`${API_URL}/speak_text`, options);\r\n\r\n  if (!response.ok) {\r\n    throw new Error(\"Failed to fetch audio stream.\");\r\n  }\r\n\r\n  // Create a blob from the response stream and play it\r\n  const audioBlob = await response.blob();\r\n  const audioUrl = URL.createObjectURL(audioBlob);\r\n\r\n  // Create an Audio element to play the sound\r\n  const audio = new Audio(audioUrl);\r\n  audio.play();\r\n\r\n  return audioUrl; // Optionally return the URL for further use\r\n}\r\n\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAE5C,OAAO,eAAeC,eAAeA,CAACC,OAAO,EAAE;EAC7C,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,WAAW;MAAE;MACrB,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBP,OAAO,EAAEA;IACX,CAAC;EACH,CAAC;EAED,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGX,OAAO,aAAa,EAAEG,OAAO,CAAC;EAE9D,IAAI,CAACO,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EAClD;;EAEA;EACA,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EACvC,MAAMC,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACJ,SAAS,CAAC;;EAE/C;EACA,MAAMK,KAAK,GAAG,IAAIC,KAAK,CAACJ,QAAQ,CAAC;EACjCG,KAAK,CAACE,IAAI,CAAC,CAAC;EAEZ,OAAOL,QAAQ,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}