{"ast":null,"code":"var _jsxFileName = \"/home/samoore/tpd/new/src/App.js\";\n// import \"./App.css\";\n// import Layout from \"./layouts/Layout\";\n\n// import Container from \"react-bootstrap/Container\";\n// import Row from \"react-bootstrap/Row\";\n// import Col from \"react-bootstrap/Col\";\n// import Nav from \"react-bootstrap/Nav\";\n// import Navbar from \"react-bootstrap/Navbar\";\n// // import TextReader from './components/TextReader';\n// // import NewVoiceRecorder from './components/NewVoiceRecorder';\n// import WordHelper from \"./components/WordHelper\";\n// // import WordHint from './components/WordHint';\n// import WordScores from \"./components/WordScores\";\n// import SentenceHint from \"./test/SentenceHint\";\n// import { useState } from \"react\";\n// import { Route, Routes } from \"react-router-dom\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faBookOpen } from \"@fortawesome/free-solid-svg-icons/faBookOpen\";\n// import { faBars } from \"@fortawesome/free-solid-svg-icons/faBars\";\n\n// function MainScreen() {\n//   //   const [question, setQuestion] = useState('');\n//   const [isWaiting, setIsWaiting] = useState(false);\n//   //   const [chat, setChat] = useState([]);\n\n//   // const source = 'https://samuelmoore.cc/'\n//   const source = \"http://127.0.0.1:5000/\";\n\n//   // const speakText = useCallback((message) => {\n//   //   console.log('Speaking text:', message);\n//   //   fetch(`${source}speak_text`, {\n//   //     method: 'POST',\n//   //     headers: {\n//   //       'Accept': 'application/json',\n//   //       'Content-Type': 'application/json'\n//   //     },\n//   //     body: JSON.stringify({\n//   //       'message': message\n//   //     })\n//   //   })\n//   //   .then(response => response.json())\n//   //   .then(data => {\n//   //     console.log('Response data:', data);\n//   //         const audioData = data.audio;\n//   //         const audioBlob = new Blob([Uint8Array.from(atob(audioData), c => c.charCodeAt(0))], { type: 'audio/mp3' });\n//   //         const audioUrl = URL.createObjectURL(audioBlob);\n//   //         const audio = new Audio(audioUrl);\n//   //         audio.onended = () => {\n//   //           setIsWaiting(false);\n//   //           }\n//   //         audio.play();\n\n//   //     })\n//   //     .catch(error => {\n//   //       console.error('Error:', error);\n//   //     }\n//   //     );\n//   //   }, [setIsWaiting]);\n\n//   return (\n//     <div className=\"main-screen\">\n//       {/* <WordHelper source={source}/>  */}\n//       {/* <TextReader               setIsWaiting={setIsWaiting}\n//                                 chat={chat}\n//                                 setChat={setChat}\n//                                 question={question}\n//                                 setQuestion={setQuestion}\n//                                 speakText={speakText}\n//                                 /> */}\n//       {/* <AudioTranscription setQuestion={setQuestion}\n//                                 isWaiting={isWaiting}\n//                                 setIsWaiting={setIsWaiting}\n//                                 chat={chat}\n//                                 setChat={setChat}\n//                                 setUserQuestion={setUserQuestion}\n//                                 synth={synth}/>  */}\n//       {/* <SpeechToText setQuestion={setQuestion}/> */}\n//       <SentenceHint source={source} />\n//       {/* <WordScores source={source}/> */}\n//       {/* <NewVoiceRecorder isWaiting={isWaiting} setIsWaiting={setIsWaiting}\n//                       source={source}\n//                       question={question}\n//                       setQuestion={setQuestion}/>  */}\n\n//       {/* <button onClick={closeEverything}>Close Everything</button> */}\n//     </div>\n//   );\n// }\n\n// // function App() {\n// //   return (\n// //     <div className=\"bground\">\n// //       <Router>\n// //         <Container>\n// //         <Row>\n// //           <Col md={3}></Col>\n// //           <Col md={6}>\n// //             <Navbar bg=\"light-bg-subtle\" variant=\"dark\" className=\"navbar-top\">\n// //                 <Navbar.Brand href=\"#home\"><FontAwesomeIcon icon={faBookOpen} /> Turning Pages </Navbar.Brand>\n// //                 <Nav className=\"ms-auto\">\n// //                   <Nav.Link href=\"#pricing\"><FontAwesomeIcon icon={faBars} /></Nav.Link>\n// //                 </Nav>\n// //             </Navbar>\n// //           </Col>\n// //           <Col  md={2}></Col>\n// //         </Row>\n// //           <Row>\n// //           <Col sam={1} md={3}></Col>\n// //           <Col sam={10} md={6}>\n// //             <MainScreen />\n\n// //             </Col>\n// //           <Col sm={1} md={3}></Col>\n// //           </Row>\n// //         </Container>\n// //       </Router>\n// //     </div>\n// //   );\n// // }\n\nimport \"./App.css\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Layout from \"./layouts/Layout\";\nimport HomePage from \"./pages/HomePage\";\nimport SelectCoachOrNot from \"./pages/SelectCoachOrNot\";\nimport Explain from \"./pages/Explain\";\nimport ExerciseEntryPoint from \"./pages/ExerciseEntryPoint\";\nimport ExerciseProvider from \"./Contexts/ExerciseContext\";\nimport GlobalProvider from \"./Contexts/GlobalContext\";\nimport EndExerciseChat from \"./pages/EndExerciseChat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfetch(`https://samuelmoore.cc/generate`, {\n  method: 'POST',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    'message': message\n  })\n}).then(response => response.json()).then(data => {\n  console.log('Response data:', data);\n}).catch(error => {\n  console.error('Error:', error);\n});\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(GlobalProvider, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/exercise/:exercise_id\",\n          element: /*#__PURE__*/_jsxDEV(ExerciseProvider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 57\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"select-with-coach-or-not\",\n            element: /*#__PURE__*/_jsxDEV(SelectCoachOrNot, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"explain\",\n            element: /*#__PURE__*/_jsxDEV(Explain, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"steps/:step_number\",\n            element: /*#__PURE__*/_jsxDEV(ExerciseEntryPoint, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"complete\",\n            element: /*#__PURE__*/_jsxDEV(EndExerciseChat, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","Routes","Layout","HomePage","SelectCoachOrNot","Explain","ExerciseEntryPoint","ExerciseProvider","GlobalProvider","EndExerciseChat","jsxDEV","_jsxDEV","fetch","method","headers","body","JSON","stringify","message","then","response","json","data","console","log","catch","error","App","children","element","fileName","_jsxFileName","lineNumber","columnNumber","path","_c","$RefreshReg$"],"sources":["/home/samoore/tpd/new/src/App.js"],"sourcesContent":["// import \"./App.css\";\n// import Layout from \"./layouts/Layout\";\n\n// import Container from \"react-bootstrap/Container\";\n// import Row from \"react-bootstrap/Row\";\n// import Col from \"react-bootstrap/Col\";\n// import Nav from \"react-bootstrap/Nav\";\n// import Navbar from \"react-bootstrap/Navbar\";\n// // import TextReader from './components/TextReader';\n// // import NewVoiceRecorder from './components/NewVoiceRecorder';\n// import WordHelper from \"./components/WordHelper\";\n// // import WordHint from './components/WordHint';\n// import WordScores from \"./components/WordScores\";\n// import SentenceHint from \"./test/SentenceHint\";\n// import { useState } from \"react\";\n// import { Route, Routes } from \"react-router-dom\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faBookOpen } from \"@fortawesome/free-solid-svg-icons/faBookOpen\";\n// import { faBars } from \"@fortawesome/free-solid-svg-icons/faBars\";\n\n// function MainScreen() {\n//   //   const [question, setQuestion] = useState('');\n//   const [isWaiting, setIsWaiting] = useState(false);\n//   //   const [chat, setChat] = useState([]);\n\n//   // const source = 'https://samuelmoore.cc/'\n//   const source = \"http://127.0.0.1:5000/\";\n\n//   // const speakText = useCallback((message) => {\n//   //   console.log('Speaking text:', message);\n//   //   fetch(`${source}speak_text`, {\n//   //     method: 'POST',\n//   //     headers: {\n//   //       'Accept': 'application/json',\n//   //       'Content-Type': 'application/json'\n//   //     },\n//   //     body: JSON.stringify({\n//   //       'message': message\n//   //     })\n//   //   })\n//   //   .then(response => response.json())\n//   //   .then(data => {\n//   //     console.log('Response data:', data);\n//   //         const audioData = data.audio;\n//   //         const audioBlob = new Blob([Uint8Array.from(atob(audioData), c => c.charCodeAt(0))], { type: 'audio/mp3' });\n//   //         const audioUrl = URL.createObjectURL(audioBlob);\n//   //         const audio = new Audio(audioUrl);\n//   //         audio.onended = () => {\n//   //           setIsWaiting(false);\n//   //           }\n//   //         audio.play();\n\n//   //     })\n//   //     .catch(error => {\n//   //       console.error('Error:', error);\n//   //     }\n//   //     );\n//   //   }, [setIsWaiting]);\n\n//   return (\n//     <div className=\"main-screen\">\n//       {/* <WordHelper source={source}/>  */}\n//       {/* <TextReader               setIsWaiting={setIsWaiting}\n//                                 chat={chat}\n//                                 setChat={setChat}\n//                                 question={question}\n//                                 setQuestion={setQuestion}\n//                                 speakText={speakText}\n//                                 /> */}\n//       {/* <AudioTranscription setQuestion={setQuestion}\n//                                 isWaiting={isWaiting}\n//                                 setIsWaiting={setIsWaiting}\n//                                 chat={chat}\n//                                 setChat={setChat}\n//                                 setUserQuestion={setUserQuestion}\n//                                 synth={synth}/>  */}\n//       {/* <SpeechToText setQuestion={setQuestion}/> */}\n//       <SentenceHint source={source} />\n//       {/* <WordScores source={source}/> */}\n//       {/* <NewVoiceRecorder isWaiting={isWaiting} setIsWaiting={setIsWaiting}\n//                       source={source}\n//                       question={question}\n//                       setQuestion={setQuestion}/>  */}\n\n//       {/* <button onClick={closeEverything}>Close Everything</button> */}\n//     </div>\n//   );\n// }\n\n// // function App() {\n// //   return (\n// //     <div className=\"bground\">\n// //       <Router>\n// //         <Container>\n// //         <Row>\n// //           <Col md={3}></Col>\n// //           <Col md={6}>\n// //             <Navbar bg=\"light-bg-subtle\" variant=\"dark\" className=\"navbar-top\">\n// //                 <Navbar.Brand href=\"#home\"><FontAwesomeIcon icon={faBookOpen} /> Turning Pages </Navbar.Brand>\n// //                 <Nav className=\"ms-auto\">\n// //                   <Nav.Link href=\"#pricing\"><FontAwesomeIcon icon={faBars} /></Nav.Link>\n// //                 </Nav>\n// //             </Navbar>\n// //           </Col>\n// //           <Col  md={2}></Col>\n// //         </Row>\n// //           <Row>\n// //           <Col sam={1} md={3}></Col>\n// //           <Col sam={10} md={6}>\n// //             <MainScreen />\n\n// //             </Col>\n// //           <Col sm={1} md={3}></Col>\n// //           </Row>\n// //         </Container>\n// //       </Router>\n// //     </div>\n// //   );\n// // }\n\nimport \"./App.css\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Layout from \"./layouts/Layout\";\n\nimport HomePage from \"./pages/HomePage\";\nimport SelectCoachOrNot from \"./pages/SelectCoachOrNot\";\nimport Explain from \"./pages/Explain\";\nimport ExerciseEntryPoint from \"./pages/ExerciseEntryPoint\";\nimport ExerciseProvider from \"./Contexts/ExerciseContext\";\nimport GlobalProvider from \"./Contexts/GlobalContext\";\nimport EndExerciseChat from \"./pages/EndExerciseChat\";\n\n\n    fetch(`https://samuelmoore.cc/generate`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      'message': message\n    })\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log('Response data:', data);\n\n    })\n    .catch(error => {\n      console.error('Error:', error);\n    }\n    );\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Routes>\n        <Route element={<Layout />}>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/exercise/:exercise_id\" element={<ExerciseProvider />}>\n            <Route\n              path=\"select-with-coach-or-not\"\n              element={<SelectCoachOrNot />}\n            />\n            <Route path=\"explain\" element={<Explain />} />\n            <Route path=\"steps/:step_number\" element={<ExerciseEntryPoint />} />\n            <Route path=\"complete\" element={<EndExerciseChat />} />\n          </Route>\n        </Route>\n      </Routes>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}