{"ast":null,"code":"// import \"./App.css\";\n// import Layout from \"./layouts/Layout\";\n// import Container from \"react-bootstrap/Container\";\n// import Row from \"react-bootstrap/Row\";\n// import Col from \"react-bootstrap/Col\";\n// import Nav from \"react-bootstrap/Nav\";\n// import Navbar from \"react-bootstrap/Navbar\";\n// // import TextReader from './components/TextReader';\n// // import NewVoiceRecorder from './components/NewVoiceRecorder';\n// import WordHelper from \"./components/WordHelper\";\n// // import WordHint from './components/WordHint';\n// import WordScores from \"./components/WordScores\";\n// import SentenceHint from \"./test/SentenceHint\";\n// import { useState } from \"react\";\n// import { Route, Routes } from \"react-router-dom\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faBookOpen } from \"@fortawesome/free-solid-svg-icons/faBookOpen\";\n// import { faBars } from \"@fortawesome/free-solid-svg-icons/faBars\";\n// function MainScreen() {\n//   //   const [question, setQuestion] = useState('');\n//   const [isWaiting, setIsWaiting] = useState(false);\n//   //   const [chat, setChat] = useState([]);\n//   // const source = 'https://samuelmoore.cc/'\n//   const source = \"http://127.0.0.1:5000/\";\n//   // const speakText = useCallback((message) => {\n//   //   console.log('Speaking text:', message);\n//   //   fetch(`${source}speak_text`, {\n//   //     method: 'POST',\n//   //     headers: {\n//   //       'Accept': 'application/json',\n//   //       'Content-Type': 'application/json'\n//   //     },\n//   //     body: JSON.stringify({\n//   //       'message': message\n//   //     })\n//   //   })\n//   //   .then(response => response.json())\n//   //   .then(data => {\n//   //     console.log('Response data:', data);\n//   //         const audioData = data.audio;\n//   //         const audioBlob = new Blob([Uint8Array.from(atob(audioData), c => c.charCodeAt(0))], { type: 'audio/mp3' });\n//   //         const audioUrl = URL.createObjectURL(audioBlob);\n//   //         const audio = new Audio(audioUrl);\n//   //         audio.onended = () => {\n//   //           setIsWaiting(false);\n//   //           }\n//   //         audio.play();\n//   //     })\n//   //     .catch(error => {\n//   //       console.error('Error:', error);\n//   //     }\n//   //     );\n//   //   }, [setIsWaiting]);\n//   return (\n//     <div className=\"main-screen\">\n//       {/* <WordHelper source={source}/>  */}\n//       {/* <TextReader               setIsWaiting={setIsWaiting}\n//                                 chat={chat}\n//                                 setChat={setChat}\n//                                 question={question}\n//                                 setQuestion={setQuestion}\n//                                 speakText={speakText}\n//                                 /> */}\n//       {/* <AudioTranscription setQuestion={setQuestion}\n//                                 isWaiting={isWaiting}\n//                                 setIsWaiting={setIsWaiting}\n//                                 chat={chat}\n//                                 setChat={setChat}\n//                                 setUserQuestion={setUserQuestion}\n//                                 synth={synth}/>  */}\n//       {/* <SpeechToText setQuestion={setQuestion}/> */}\n//       <SentenceHint source={source} />\n//       {/* <WordScores source={source}/> */}\n//       {/* <NewVoiceRecorder isWaiting={isWaiting} setIsWaiting={setIsWaiting}\n//                       source={source}\n//                       question={question}\n//                       setQuestion={setQuestion}/>  */}\n//       {/* <button onClick={closeEverything}>Close Everything</button> */}\n//     </div>\n//   );\n// }\n// // function App() {\n// //   return (\n// //     <div className=\"bground\">\n// //       <Router>\n// //         <Container>\n// //         <Row>\n// //           <Col md={3}></Col>\n// //           <Col md={6}>\n// //             <Navbar bg=\"light-bg-subtle\" variant=\"dark\" className=\"navbar-top\">\n// //                 <Navbar.Brand href=\"#home\"><FontAwesomeIcon icon={faBookOpen} /> Turning Pages </Navbar.Brand>\n// //                 <Nav className=\"ms-auto\">\n// //                   <Nav.Link href=\"#pricing\"><FontAwesomeIcon icon={faBars} /></Nav.Link>\n// //                 </Nav>\n// //             </Navbar>\n// //           </Col>\n// //           <Col  md={2}></Col>\n// //         </Row>\n// //           <Row>\n// //           <Col sam={1} md={3}></Col>\n// //           <Col sam={10} md={6}>\n// //             <MainScreen />\n// //             </Col>\n// //           <Col sm={1} md={3}></Col>\n// //           </Row>\n// //         </Container>\n// //       </Router>\n// //     </div>\n// //   );\n// // }\nimport\"./App.css\";import{Route,Routes}from\"react-router-dom\";import Layout from\"./layouts/Layout\";import HomePage from\"./pages/HomePage\";import SelectCoachOrNot from\"./pages/SelectCoachOrNot\";import Explain from\"./pages/Explain\";import ExerciseEntryPoint from\"./pages/ExerciseEntryPoint\";import ExerciseProvider from\"./Contexts/ExerciseContext\";import GlobalProvider from\"./Contexts/GlobalContext\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){return/*#__PURE__*/_jsx(GlobalProvider,{children:/*#__PURE__*/_jsx(Routes,{children:/*#__PURE__*/_jsxs(Route,{element:/*#__PURE__*/_jsx(Layout,{}),children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(HomePage,{})}),/*#__PURE__*/_jsxs(Route,{path:\"/exercise/:exercise_id\",element:/*#__PURE__*/_jsx(ExerciseProvider,{}),children:[/*#__PURE__*/_jsx(Route,{path:\"select-with-coach-or-not\",element:/*#__PURE__*/_jsx(SelectCoachOrNot,{})}),/*#__PURE__*/_jsx(Route,{path:\"explain\",element:/*#__PURE__*/_jsx(Explain,{})}),/*#__PURE__*/_jsx(Route,{path:\"steps/:step_number\",element:/*#__PURE__*/_jsx(ExerciseEntryPoint,{})})]})]})})});}export default App;","map":{"version":3,"names":["Route","Routes","Layout","HomePage","SelectCoachOrNot","Explain","ExerciseEntryPoint","ExerciseProvider","GlobalProvider","jsx","_jsx","jsxs","_jsxs","App","children","element","path"],"sources":["/home/samoore/tpd/new/src/App.js"],"sourcesContent":["// import \"./App.css\";\n// import Layout from \"./layouts/Layout\";\n\n// import Container from \"react-bootstrap/Container\";\n// import Row from \"react-bootstrap/Row\";\n// import Col from \"react-bootstrap/Col\";\n// import Nav from \"react-bootstrap/Nav\";\n// import Navbar from \"react-bootstrap/Navbar\";\n// // import TextReader from './components/TextReader';\n// // import NewVoiceRecorder from './components/NewVoiceRecorder';\n// import WordHelper from \"./components/WordHelper\";\n// // import WordHint from './components/WordHint';\n// import WordScores from \"./components/WordScores\";\n// import SentenceHint from \"./test/SentenceHint\";\n// import { useState } from \"react\";\n// import { Route, Routes } from \"react-router-dom\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faBookOpen } from \"@fortawesome/free-solid-svg-icons/faBookOpen\";\n// import { faBars } from \"@fortawesome/free-solid-svg-icons/faBars\";\n\n// function MainScreen() {\n//   //   const [question, setQuestion] = useState('');\n//   const [isWaiting, setIsWaiting] = useState(false);\n//   //   const [chat, setChat] = useState([]);\n\n//   // const source = 'https://samuelmoore.cc/'\n//   const source = \"http://127.0.0.1:5000/\";\n\n//   // const speakText = useCallback((message) => {\n//   //   console.log('Speaking text:', message);\n//   //   fetch(`${source}speak_text`, {\n//   //     method: 'POST',\n//   //     headers: {\n//   //       'Accept': 'application/json',\n//   //       'Content-Type': 'application/json'\n//   //     },\n//   //     body: JSON.stringify({\n//   //       'message': message\n//   //     })\n//   //   })\n//   //   .then(response => response.json())\n//   //   .then(data => {\n//   //     console.log('Response data:', data);\n//   //         const audioData = data.audio;\n//   //         const audioBlob = new Blob([Uint8Array.from(atob(audioData), c => c.charCodeAt(0))], { type: 'audio/mp3' });\n//   //         const audioUrl = URL.createObjectURL(audioBlob);\n//   //         const audio = new Audio(audioUrl);\n//   //         audio.onended = () => {\n//   //           setIsWaiting(false);\n//   //           }\n//   //         audio.play();\n\n//   //     })\n//   //     .catch(error => {\n//   //       console.error('Error:', error);\n//   //     }\n//   //     );\n//   //   }, [setIsWaiting]);\n\n//   return (\n//     <div className=\"main-screen\">\n//       {/* <WordHelper source={source}/>  */}\n//       {/* <TextReader               setIsWaiting={setIsWaiting}\n//                                 chat={chat}\n//                                 setChat={setChat}\n//                                 question={question}\n//                                 setQuestion={setQuestion}\n//                                 speakText={speakText}\n//                                 /> */}\n//       {/* <AudioTranscription setQuestion={setQuestion}\n//                                 isWaiting={isWaiting}\n//                                 setIsWaiting={setIsWaiting}\n//                                 chat={chat}\n//                                 setChat={setChat}\n//                                 setUserQuestion={setUserQuestion}\n//                                 synth={synth}/>  */}\n//       {/* <SpeechToText setQuestion={setQuestion}/> */}\n//       <SentenceHint source={source} />\n//       {/* <WordScores source={source}/> */}\n//       {/* <NewVoiceRecorder isWaiting={isWaiting} setIsWaiting={setIsWaiting}\n//                       source={source}\n//                       question={question}\n//                       setQuestion={setQuestion}/>  */}\n\n//       {/* <button onClick={closeEverything}>Close Everything</button> */}\n//     </div>\n//   );\n// }\n\n// // function App() {\n// //   return (\n// //     <div className=\"bground\">\n// //       <Router>\n// //         <Container>\n// //         <Row>\n// //           <Col md={3}></Col>\n// //           <Col md={6}>\n// //             <Navbar bg=\"light-bg-subtle\" variant=\"dark\" className=\"navbar-top\">\n// //                 <Navbar.Brand href=\"#home\"><FontAwesomeIcon icon={faBookOpen} /> Turning Pages </Navbar.Brand>\n// //                 <Nav className=\"ms-auto\">\n// //                   <Nav.Link href=\"#pricing\"><FontAwesomeIcon icon={faBars} /></Nav.Link>\n// //                 </Nav>\n// //             </Navbar>\n// //           </Col>\n// //           <Col  md={2}></Col>\n// //         </Row>\n// //           <Row>\n// //           <Col sam={1} md={3}></Col>\n// //           <Col sam={10} md={6}>\n// //             <MainScreen />\n\n// //             </Col>\n// //           <Col sm={1} md={3}></Col>\n// //           </Row>\n// //         </Container>\n// //       </Router>\n// //     </div>\n// //   );\n// // }\n\nimport \"./App.css\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Layout from \"./layouts/Layout\";\n\nimport HomePage from \"./pages/HomePage\";\nimport SelectCoachOrNot from \"./pages/SelectCoachOrNot\";\nimport Explain from \"./pages/Explain\";\nimport ExerciseEntryPoint from \"./pages/ExerciseEntryPoint\";\nimport ExerciseProvider from \"./Contexts/ExerciseContext\";\nimport GlobalProvider from \"./Contexts/GlobalContext\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Routes>\n        <Route element={<Layout />}>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/exercise/:exercise_id\" element={<ExerciseProvider />}>\n            <Route\n              path=\"select-with-coach-or-not\"\n              element={<SelectCoachOrNot />}\n            />\n            <Route path=\"explain\" element={<Explain />} />\n            <Route path=\"steps/:step_number\" element={<ExerciseEntryPoint />} />\n          </Route>\n        </Route>\n      </Routes>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,WAAW,CAClB,OAASA,KAAK,CAAEC,MAAM,KAAQ,kBAAkB,CAChD,MAAO,CAAAC,MAAM,KAAM,kBAAkB,CAErC,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,CAAAC,gBAAgB,KAAM,0BAA0B,CACvD,MAAO,CAAAC,OAAO,KAAM,iBAAiB,CACrC,MAAO,CAAAC,kBAAkB,KAAM,4BAA4B,CAC3D,MAAO,CAAAC,gBAAgB,KAAM,4BAA4B,CACzD,MAAO,CAAAC,cAAc,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,mBACEH,IAAA,CAACF,cAAc,EAAAM,QAAA,cACbJ,IAAA,CAACT,MAAM,EAAAa,QAAA,cACLF,KAAA,CAACZ,KAAK,EAACe,OAAO,cAAEL,IAAA,CAACR,MAAM,GAAE,CAAE,CAAAY,QAAA,eACzBJ,IAAA,CAACV,KAAK,EAACgB,IAAI,CAAC,GAAG,CAACD,OAAO,cAAEL,IAAA,CAACP,QAAQ,GAAE,CAAE,CAAE,CAAC,cACzCS,KAAA,CAACZ,KAAK,EAACgB,IAAI,CAAC,wBAAwB,CAACD,OAAO,cAAEL,IAAA,CAACH,gBAAgB,GAAE,CAAE,CAAAO,QAAA,eACjEJ,IAAA,CAACV,KAAK,EACJgB,IAAI,CAAC,0BAA0B,CAC/BD,OAAO,cAAEL,IAAA,CAACN,gBAAgB,GAAE,CAAE,CAC/B,CAAC,cACFM,IAAA,CAACV,KAAK,EAACgB,IAAI,CAAC,SAAS,CAACD,OAAO,cAAEL,IAAA,CAACL,OAAO,GAAE,CAAE,CAAE,CAAC,cAC9CK,IAAA,CAACV,KAAK,EAACgB,IAAI,CAAC,oBAAoB,CAACD,OAAO,cAAEL,IAAA,CAACJ,kBAAkB,GAAE,CAAE,CAAE,CAAC,EAC/D,CAAC,EACH,CAAC,CACF,CAAC,CACK,CAAC,CAErB,CAEA,cAAe,CAAAO,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}