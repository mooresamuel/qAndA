{"ast":null,"code":"import{useEffect,useState}from\"react\";import{createChatContext,fetchAIEndExerciseAnswers}from\"../services/AIChatAPI\";import FullPageSpinner from\"../components/FullPageSpinner/FullPageSpinner\";import{useExerciseData}from\"../Contexts/ExerciseContext\";import ChatQuestionRecording from\"../components/ChatQuestionRecording/ChatQuestionRecording\";import ChatBubble from\"../components/ChatBubble/ChatBubble\";import ChatWaitingIndicator from\"../components/ChatWaitingIndicator/ChatWaitingIndicator\";import AcceptGeneratedExercises from\"../components/AcceptGeneratedExercises/AcceptGeneratedExercises\";import SpokenText from\"../components/SpokenText/SpokenText\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function EndExerciseChat(){const navigate=useNavigate();const{mistakes,handleUseGeneratedQuestions}=useExerciseData();const[chat,setChat]=useState([]);const[isLoading,setIsLoading]=useState(true);const[isSending,setIsSending]=useState(false);const[displayAcceptQuestions,setDisplayAcceptQuestions]=useState(false);const[generatedQuestions,setGeneratedQuestions]=useState(null);useEffect(function(){async function fetch(){if(chat.length!==0)return;await createChatContext();const data=await fetchAIEndExerciseAnswers({exercise_details:mistakes,message:\"Please evaluate this exercise\"});console.log(data);setChat(current=>[...current,{sent:\"bot\",message:data.response}]);if(data.includes_questions){setDisplayAcceptQuestions(true);console.log(\"data.question\",data.question);setGeneratedQuestions(data.question);}else{setDisplayAcceptQuestions(false);setGeneratedQuestions(data.question);}setIsLoading(false);}fetch();},[chat]);async function handleSend(user_input){setIsSending(true);setChat(chat=>[...chat,{sent:\"user\",message:user_input}]);try{const prompt={exercise_details:mistakes,message:\"user_input\"};const data=await fetchAIEndExerciseAnswers(prompt);setChat(chat=>[...chat,{sent:\"bot\",message:data.response}]);}catch(err){console.log(err);}finally{setIsSending(false);}}if(isLoading)return/*#__PURE__*/_jsx(FullPageSpinner,{});return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col justify-between h-full py-4\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(SpokenText,{containerClass:\"items-center text-3xl\",text:\"Review your performance\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow bg-white flex flex-col gap-3 py-4 px-3 overflow-y-auto\",children:[chat.map((message,i)=>/*#__PURE__*/_jsx(ChatBubble,{message:message},i)),isSending&&/*#__PURE__*/_jsx(ChatWaitingIndicator,{})]}),/*#__PURE__*/_jsx(\"div\",{className:\"pb-4\",children:displayAcceptQuestions?/*#__PURE__*/_jsx(AcceptGeneratedExercises,{onAccept:()=>handleUseGeneratedQuestions(generatedQuestions),onChatbot:()=>setDisplayAcceptQuestions(false)}):/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-2\",children:[/*#__PURE__*/_jsx(ChatQuestionRecording,{onSend:handleSend}),/*#__PURE__*/_jsxs(\"div\",{className:\" flex gap-3 justify-center\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/\"),className:\"border-1 rounded-md text-hightlight font-semibold border-hightlight px-4 py-2 w-fit hover:text-white hover:bg-hightlight\",children:\"Leave\"}),generatedQuestions&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleUseGeneratedQuestions(generatedQuestions),className:\"border-1 rounded-md bg-hightlight text-white  font-semibold border-hightlight px-4 py-2 w-fit\",children:\"Practice more\"})]})]})})]});}export default EndExerciseChat;","map":{"version":3,"names":["useEffect","useState","createChatContext","fetchAIEndExerciseAnswers","FullPageSpinner","useExerciseData","ChatQuestionRecording","ChatBubble","ChatWaitingIndicator","AcceptGeneratedExercises","SpokenText","useNavigate","jsx","_jsx","jsxs","_jsxs","EndExerciseChat","navigate","mistakes","handleUseGeneratedQuestions","chat","setChat","isLoading","setIsLoading","isSending","setIsSending","displayAcceptQuestions","setDisplayAcceptQuestions","generatedQuestions","setGeneratedQuestions","fetch","length","data","exercise_details","message","console","log","current","sent","response","includes_questions","question","handleSend","user_input","prompt","err","className","children","containerClass","text","map","i","onAccept","onChatbot","onSend","onClick"],"sources":["/home/samoore/tpd/new/src/pages/EndExerciseChat.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport {\r\n  createChatContext,\r\n  fetchAIEndExerciseAnswers,\r\n} from \"../services/AIChatAPI\";\r\nimport FullPageSpinner from \"../components/FullPageSpinner/FullPageSpinner\";\r\nimport { useExerciseData } from \"../Contexts/ExerciseContext\";\r\nimport ChatQuestionRecording from \"../components/ChatQuestionRecording/ChatQuestionRecording\";\r\nimport ChatBubble from \"../components/ChatBubble/ChatBubble\";\r\nimport ChatWaitingIndicator from \"../components/ChatWaitingIndicator/ChatWaitingIndicator\";\r\nimport AcceptGeneratedExercises from \"../components/AcceptGeneratedExercises/AcceptGeneratedExercises\";\r\nimport SpokenText from \"../components/SpokenText/SpokenText\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction EndExerciseChat() {\r\n  const navigate = useNavigate();\r\n  const { mistakes, handleUseGeneratedQuestions } = useExerciseData();\r\n  const [chat, setChat] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [displayAcceptQuestions, setDisplayAcceptQuestions] = useState(false);\r\n  const [generatedQuestions, setGeneratedQuestions] = useState(null);\r\n\r\n  useEffect(\r\n    function () {\r\n      async function fetch() {\r\n        if (chat.length !== 0) return;\r\n        await createChatContext();\r\n        const data = await fetchAIEndExerciseAnswers({\r\n          exercise_details: mistakes,\r\n          message: \"Please evaluate this exercise\",\r\n        });\r\n\r\n        console.log(data);\r\n        setChat((current) => [\r\n          ...current,\r\n          { sent: \"bot\", message: data.response },\r\n        ]);\r\n        if (data.includes_questions) {\r\n          setDisplayAcceptQuestions(true);\r\n          console.log(\"data.question\", data.question);\r\n          setGeneratedQuestions(data.question);\r\n        } else {\r\n          setDisplayAcceptQuestions(false);\r\n          setGeneratedQuestions(data.question);\r\n        }\r\n        setIsLoading(false);\r\n      }\r\n      fetch();\r\n    },\r\n    [chat]\r\n  );\r\n\r\n  async function handleSend(user_input) {\r\n    setIsSending(true);\r\n    setChat((chat) => [...chat, { sent: \"user\", message: user_input }]);\r\n    try {\r\n      const prompt = {\r\n        exercise_details: mistakes,\r\n        message: \"user_input\",\r\n      };\r\n\r\n      const data = await fetchAIEndExerciseAnswers(prompt);\r\n      setChat((chat) => [...chat, { sent: \"bot\", message: data.response }]);\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setIsSending(false);\r\n    }\r\n  }\r\n\r\n  if (isLoading) return <FullPageSpinner />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col justify-between h-full py-4\">\r\n      <div>\r\n        <SpokenText\r\n          containerClass={\"items-center text-3xl\"}\r\n          text={\"Review your performance\"}\r\n        />\r\n      </div>\r\n      <div className=\"flex-grow bg-white flex flex-col gap-3 py-4 px-3 overflow-y-auto\">\r\n        {chat.map((message, i) => (\r\n          <ChatBubble message={message} key={i} />\r\n        ))}\r\n\r\n        {isSending && <ChatWaitingIndicator />}\r\n      </div>\r\n      <div className=\"pb-4\">\r\n        {displayAcceptQuestions ? (\r\n          <AcceptGeneratedExercises\r\n            onAccept={() => handleUseGeneratedQuestions(generatedQuestions)}\r\n            onChatbot={() => setDisplayAcceptQuestions(false)}\r\n          />\r\n        ) : (\r\n          <div className=\"flex flex-col gap-2\">\r\n            <ChatQuestionRecording onSend={handleSend} />\r\n            <div className=\" flex gap-3 justify-center\">\r\n              <button\r\n                onClick={() => navigate(\"/\")}\r\n                className=\"border-1 rounded-md text-hightlight font-semibold border-hightlight px-4 py-2 w-fit hover:text-white hover:bg-hightlight\"\r\n              >\r\n                Leave\r\n              </button>\r\n              {generatedQuestions && (\r\n                <button\r\n                  onClick={() =>\r\n                    handleUseGeneratedQuestions(generatedQuestions)\r\n                  }\r\n                  className=\"border-1 rounded-md bg-hightlight text-white  font-semibold border-hightlight px-4 py-2 w-fit\"\r\n                >\r\n                  Practice more\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EndExerciseChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}