{"ast":null,"code":"var _jsxFileName = \"/home/samoore/tpd/new/src/components/QuestionCompleteSentence/QuestionCompleteSentence.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useExerciseData } from \"../../Contexts/ExerciseContext\";\nimport TextToSpeech from \"../TextToSpeech/TextToSpeech\";\nimport NextButtonRight from \"../NextButtonRight/NextButtonRight\";\nimport ProgressBar from \"../ProgressBar/ProgressBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionCompleteSentence({\n  question\n}) {\n  _s();\n  const {\n    handleNextQuestion\n  } = useExerciseData();\n  const [answers, setAnswers] = useState(Array.from(question.answers, () => false));\n  const [correct, setCorrect] = useState(false);\n  const splitSentence = question.prompts[0].split(\"%\");\n  const correctSentence = question.prompts[0].replaceAll(\"%//\", \"\").replaceAll(\"//%\", \"\");\n  let currentIndex = 0;\n  function handleAnswerPicked(answer) {\n    let end = false;\n    setAnswers(current => [...current].map(el => {\n      if (end) return el;\n      if (el === false) {\n        end = true;\n        return answer;\n      } else {\n        return el;\n      }\n    }));\n  }\n  function removeAnswer(index) {\n    setAnswers(current => [...current].map((el, i) => i === index ? false : el));\n  }\n  useEffect(() => {\n    if (answers.length > 0) {\n      if ([...question.answers].sort().toString() === [...answers].sort().toString()) {\n        setCorrect(true);\n      } else {\n        setCorrect(false);\n      }\n    }\n  }, [answers]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full justify-between items-center\",\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-16\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-3 text-lg px-3 py-5 bg-gray-100\",\n        children: [/*#__PURE__*/_jsxDEV(TextToSpeech, {\n          sentence: correctSentence\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m-0 align-middle text-hightlight\",\n          children: splitSentence.map((chunk, i) => {\n            if (chunk.startsWith(\"//\") && chunk.endsWith(\"//\")) {\n              let index = currentIndex; // prevent index to be incremented when onClick is called\n              currentIndex++;\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"w-20 border-2 h-16 border-hightlight shadow-md rounded-md align-middle\",\n                onClick: () => removeAnswer(index),\n                children: answers[index]\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"align-middle\",\n                children: chunk\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-3 justify-center\",\n        children: question.data.map((option, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerPicked(option),\n          className: \"flex items-center gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(TextToSpeech, {\n            sentence: option\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-hightlight font-semibold m-0 px-2 py-3 rounded-md shadow-md h-full\",\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NextButtonRight, {\n      isEnabled: correct,\n      className: \"mt-28\",\n      onClick: handleNextQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionCompleteSentence, \"GvJq08Lhapfm856pECXlQskI3Oo=\", false, function () {\n  return [useExerciseData];\n});\n_c = QuestionCompleteSentence;\nexport default QuestionCompleteSentence;\nvar _c;\n$RefreshReg$(_c, \"QuestionCompleteSentence\");","map":{"version":3,"names":["useEffect","useState","useExerciseData","TextToSpeech","NextButtonRight","ProgressBar","jsxDEV","_jsxDEV","QuestionCompleteSentence","question","_s","handleNextQuestion","answers","setAnswers","Array","from","correct","setCorrect","splitSentence","prompts","split","correctSentence","replaceAll","currentIndex","handleAnswerPicked","answer","end","current","map","el","removeAnswer","index","i","length","sort","toString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sentence","chunk","startsWith","endsWith","onClick","data","option","isEnabled","_c","$RefreshReg$"],"sources":["/home/samoore/tpd/new/src/components/QuestionCompleteSentence/QuestionCompleteSentence.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useExerciseData } from \"../../Contexts/ExerciseContext\";\r\nimport TextToSpeech from \"../TextToSpeech/TextToSpeech\";\r\nimport NextButtonRight from \"../NextButtonRight/NextButtonRight\";\r\nimport ProgressBar from \"../ProgressBar/ProgressBar\";\r\n\r\nfunction QuestionCompleteSentence({ question }) {\r\n  const { handleNextQuestion } = useExerciseData();\r\n\r\n  const [answers, setAnswers] = useState(\r\n    Array.from(question.answers, () => false)\r\n  );\r\n  const [correct, setCorrect] = useState(false);\r\n  const splitSentence = question.prompts[0].split(\"%\");\r\n  const correctSentence = question.prompts[0]\r\n    .replaceAll(\"%//\", \"\")\r\n    .replaceAll(\"//%\", \"\");\r\n\r\n  let currentIndex = 0;\r\n\r\n  function handleAnswerPicked(answer) {\r\n    let end = false;\r\n    setAnswers((current) =>\r\n      [...current].map((el) => {\r\n        if (end) return el;\r\n        if (el === false) {\r\n          end = true;\r\n          return answer;\r\n        } else {\r\n          return el;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  function removeAnswer(index) {\r\n    setAnswers((current) =>\r\n      [...current].map((el, i) => (i === index ? false : el))\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (answers.length > 0) {\r\n      if (\r\n        [...question.answers].sort().toString() ===\r\n        [...answers].sort().toString()\r\n      ) {\r\n        setCorrect(true);\r\n      } else {\r\n        setCorrect(false);\r\n      }\r\n    }\r\n  }, [answers]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full justify-between items-center\">\r\n      <ProgressBar />\r\n      <div className=\"space-y-16\">\r\n        <div className=\"flex items-center gap-3 text-lg px-3 py-5 bg-gray-100\">\r\n          <TextToSpeech sentence={correctSentence} />\r\n          <p className=\"m-0 align-middle text-hightlight\">\r\n            {splitSentence.map((chunk, i) => {\r\n              if (chunk.startsWith(\"//\") && chunk.endsWith(\"//\")) {\r\n                let index = currentIndex; // prevent index to be incremented when onClick is called\r\n                currentIndex++;\r\n                return (\r\n                  <button\r\n                    key={i}\r\n                    className=\"w-20 border-2 h-16 border-hightlight shadow-md rounded-md align-middle\"\r\n                    onClick={() => removeAnswer(index)}\r\n                  >\r\n                    {answers[index]}\r\n                  </button>\r\n                );\r\n              } else {\r\n                return (\r\n                  <span key={i} className=\"align-middle\">\r\n                    {chunk}\r\n                  </span>\r\n                );\r\n              }\r\n            })}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"flex gap-3 justify-center\">\r\n          {question.data.map((option, i) => (\r\n            <button\r\n              onClick={() => handleAnswerPicked(option)}\r\n              className=\"flex items-center gap-3\"\r\n            >\r\n              <TextToSpeech key={i} sentence={option} />\r\n              <p className=\"text-hightlight font-semibold m-0 px-2 py-3 rounded-md shadow-md h-full\">\r\n                {option}\r\n              </p>\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <NextButtonRight\r\n        isEnabled={correct}\r\n        className={\"mt-28\"}\r\n        onClick={handleNextQuestion}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionCompleteSentence;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}